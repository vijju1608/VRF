<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ext="clr-namespace:JCHVRF_New.Common.UI.Extensions"
                    xmlns:fa="http://schemas.fontawesome.io/icons/"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
                    xmlns:jchctrl="clr-namespace:JCHVRF_New.Common.Controls"
                    xmlns:local="clr-namespace:JCHVRF_New.Common.UI.Resources.Styles">


    <Style TargetType="Ribbon">
        <Setter Property="Height" Value="93"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Margin" Value="0,-22,0,0"/>
        <!--To remove quick access menu-->
        <Setter Property="TabHeaderStyle">
            <Setter.Value>
                <Style TargetType="RibbonTabHeader">
                    <Setter Property="Background" Value="{StaticResource OtherColor6}"/>
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Padding" Value="20,4,20,4" />
                    <Setter Property="BorderThickness" Value="1,1,1,0" />
                    <Setter Property="Margin" Value="1,0,1,0" />
                    <Setter Property="MinHeight" Value="29"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="RibbonTabHeader">
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
      BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" 
       ContentSource="{Binding Label}" RecognizesAccessKey="True"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsRibbonTabSelected" Value="False" />
                                            <Condition Property="IsMouseOver" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="Transparent" />
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsRibbonTabSelected" Value="False" />
                                            <Condition Property="IsMouseOver" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{StaticResource PrimaryColor4}" />
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="RibbonTab">
        <Setter Property="Background" Value="{StaticResource OtherColor6}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <DockPanel Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RibbonTab}, Path=Background}"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="RibbonGroup">
        <Setter Property="Height" Value="45"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RibbonGroup">
                    <Border Background="{TemplateBinding Panel.Background}" Name="GroupBorder" >
                        <Grid Name="MainGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border Padding="3,0,3,0" Margin="2,0,2,0">
                                <Grid>
                                    <ItemsPresenter Name="ItemsPresenter" />
                                    <ContentControl Name="PART_TemplateContentControl" Visibility="Collapsed" Focusable="False" />
                                </Grid>
                            </Border>
                            <Grid Margin="2,0,2,5" Grid.Row="1" x:Name="ContentGrid">
                                <ContentPresenter Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Name="PART_Header" MaxHeight="16" Margin="2,0,2,0" HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.Foreground="#FF9E9E9E" />
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter TargetName="ContentGrid" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Header" Value="">
                            <Setter TargetName="ContentGrid" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                                <Setter.Value>
                                    <SolidColorBrush>#FF9E9E9E</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
                            <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.MenuTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderThickness" TargetName="GroupBorder">
                                <Setter.Value>
                                    <Thickness>1,1,1,1</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Panel.Background" TargetName="GroupBorder">
                                <Setter.Value>
                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="GroupBorder">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlDarkBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="RibbonButton">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ext:JCHUIService.IconColor" Value="{StaticResource PrimaryColor1}"/>
        <Setter Property="MaxHeight" Value="36"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RibbonButton">
                    <Border Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Padding="22,0">
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Bottom" Text="{TemplateBinding Label}" FontSize="10" HorizontalAlignment="Center"/>
                            <jchctrl:JCHIcon Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconPadding) }" x:Name="IconImage" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconHeight)}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconWidth)}" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconColor)}" Type="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconType)}" AwesomeIcon="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.AwesomeIcon)}" VectorResource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.VectorResource)}" ImagePath="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.ImagePath)}" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource PrimaryColor4}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor4}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource PrimaryColor4}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor4}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource OtherColor4}"/>
                            <Setter Property="ext:JCHUIService.IconColor"  Value="{StaticResource OtherColor4}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="RibbonMenuButton">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ext:JCHUIService.IconPadding" Value="1"/>
        <Setter Property="ext:JCHUIService.IconColor" Value="{StaticResource PrimaryColor1}"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RibbonMenuButton">
                    <Grid Name="MainGrid" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <RibbonToggleButton Label="{TemplateBinding RibbonControlService.Label}" IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen}" ClickMode="Press" BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" Style="{x:Null}" Name="PART_ToggleButton" FocusVisualStyle="{x:Null}" RibbonTwoLineText.PathData="{TemplateBinding RibbonTwoLineText.PathData}"
                            HorizontalContentAlignment="Center"                     VerticalContentAlignment="Stretch"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            Cursor="Hand"
                            Height="Auto"
                            ext:JCHUIService.IconColor="{StaticResource PrimaryColor1}"
                            ext:JCHUIService.IconHeight ="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconHeight)}"
                            ext:JCHUIService.IconWidth ="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconWidth)}"
                            ext:JCHUIService.AwesomeIcon ="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.AwesomeIcon)}"
                            ext:JCHUIService.IconType ="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconType)}"
                            ext:JCHUIService.IconPadding ="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconPadding)}"
                            ext:JCHUIService.ImagePath ="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.ImagePath)}"
                            ext:JCHUIService.VectorResource ="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.VectorResource)}">
                            <RibbonToggleButton.Template>
                                <ControlTemplate TargetType="RibbonToggleButton">
                                    <Grid Name="MainGrid" SnapsToDevicePixels="True">
                                        <Border Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Padding="22,0">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <jchctrl:JCHIcon Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconPadding)}" x:Name="IconImage" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconHeight)}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconWidth)}" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconColor)}" Type="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconType)}" AwesomeIcon="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.AwesomeIcon)}" VectorResource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.VectorResource)}" ImagePath="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.ImagePath)}" />
                                                <RibbonTwoLineText Grid.Row="1" FontSize="10" TextAlignment="Center" LineHeight="13" LineStackingStrategy="BlockLineHeight" PathFill="{TemplateBinding TextElement.Foreground}" Text="{TemplateBinding RibbonControlService.Label}" Name="TwoLineText" Margin="1,1,1,0" HorizontalAlignment="Center" VerticalAlignment="Top" 
               RibbonTwoLineText.PathData="{TemplateBinding RibbonTwoLineText.PathData}" RibbonTwoLineText.HasTwoLines="{TemplateBinding RibbonTwoLineText.HasTwoLines}"/>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="Button.IsDefaulted" Value="True">
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                        </Trigger>
                                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource PrimaryColor4}"/>
                                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor4}"/>
                                        </Trigger>
                                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                                            <Setter Property="Background" Value="{StaticResource PrimaryColor4}"/>
                                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor4}"/>
                                        </Trigger>
                                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                                            <Setter Property="Background" Value="{StaticResource PrimaryColor4}"/>
                                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor4}"/>
                                        </Trigger>
                                        <Trigger Property="UIElement.IsEnabled" Value="False">
                                            <Setter Property="BorderBrush" Value="Transparent"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Foreground" Value="{StaticResource OtherColor4}"/>
                                            <Setter Property="ext:JCHUIService.IconColor"  Value="{StaticResource OtherColor4}"/>
                                        </Trigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True" />
                                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <!--<Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightBrushKey}" />
                                                </Setter.Value>
                                            </Setter>-->
                                            <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True" />
                                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <!--<Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>-->
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="True" />
                                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <!--<Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                                                </Setter.Value>
                                            </Setter>-->
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=TemplatedParent}, FallbackValue=false}" Value="True" />
                                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=TemplatedParent}}" Value="False" />
                                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <!--<Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                                                <Setter.Value>
                                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Panel.Background" TargetName="OuterBorder">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                                                </Setter.Value>
                                            </Setter>-->
                                            <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <!--<Setter Property="Panel.Background" TargetName="OuterBorder">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Border.BorderBrush" TargetName="InnerBorder">
                                                <Setter.Value>
                                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>-->
                                            <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <!--<Setter Property="Panel.Background" TargetName="OuterBorder">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Border.BorderBrush" TargetName="InnerBorder">
                                                <Setter.Value>
                                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>-->
                                            <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <!--<Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                                                </Setter.Value>
                                            </Setter>-->
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                                <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <!--<Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                                                </Setter.Value>
                                            </Setter>-->
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <!--<Setter Property="Panel.Background" TargetName="OuterBorder">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlDarkBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="Panel.Background" TargetName="MiddleBorder">
                                                <Setter.Value>
                                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>-->
                                            <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsInControlGroup, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <!--<Setter Property="Border.BorderBrush" TargetName="OuterBorder">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlLightLightBrushKey}" />
                                                </Setter.Value>
                                            </Setter>-->
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="RibbonTwoLineText.PathFill" TargetName="TwoLineText">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </RibbonToggleButton.Template>
                        </RibbonToggleButton>
                        <Popup IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDropDownOpen}" Placement="Bottom" HorizontalOffset="1" VerticalOffset="-1" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" AllowsTransparency="True" Name="PART_Popup" Focusable="False">

                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="2,2,2,2" BorderBrush="{x:Null}" Background="{x:Null}" Name="MenuBorder">
                                <Border BorderThickness="0,0,0,0" CornerRadius="2,2,2,2" Background="#F0FFFFFF" Name="SubMenuInnerBorder">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />

                                        <Border BorderThickness="0,1,0,0" BorderBrush="{x:Null}" Background="#FFE5EFF9" Name="ResizeControl" Visibility="Collapsed" Grid.Row="1">
                                            <Thumb Name="PART_ResizeThumb">
                                                <Thumb.Style>
                                                    <Style TargetType="Thumb">
                                                        <Style.Triggers>
                                                            <Trigger Property="FrameworkElement.FlowDirection">
                                                                <Setter Property="FrameworkElement.Cursor">
                                                                    <Setter.Value>
                                                                        <Cursor>SizeNESW</Cursor>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <x:Static Member="FlowDirection.RightToLeft" />
                                                                </Trigger.Value>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                        <Setter Property="FrameworkElement.Width">
                                                            <Setter.Value>
                                                                <s:Double>11</s:Double>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="FrameworkElement.Height">
                                                            <Setter.Value>
                                                                <s:Double>11</s:Double>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="FrameworkElement.VerticalAlignment">
                                                            <Setter.Value>
                                                                <x:Static Member="VerticalAlignment.Bottom" />
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="FrameworkElement.HorizontalAlignment">
                                                            <Setter.Value>
                                                                <x:Static Member="HorizontalAlignment.Right" />
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="FrameworkElement.Cursor">
                                                            <Setter.Value>
                                                                <Cursor>SizeNWSE</Cursor>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Control.Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="Thumb">
                                                                    <Border Background="#00FFFFFF">
                                                                        <Path Data="M9,0L11,0 11,11 0,11 0,9 3,9 3,6 6,6 6,3 9,3z" Margin="0,0,2,2">
                                                                            <Path.Fill>
                                                                                <DrawingBrush ViewportUnits="Absolute" ViewboxUnits="Absolute" Viewport="0,0,3,3" Viewbox="0,0,3,3" TileMode="Tile">
                                                                                    <DrawingBrush.Drawing>
                                                                                        <DrawingGroup>
                                                                                            <DrawingGroup.Children>
                                                                                                <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z" />
                                                                                            </DrawingGroup.Children>
                                                                                        </DrawingGroup>
                                                                                    </DrawingBrush.Drawing>
                                                                                </DrawingBrush>
                                                                            </Path.Fill>
                                                                        </Path>
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Thumb.Style>
                                            </Thumb>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Border>

                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="ScrollViewer.CanContentScroll" SourceName="PART_SubMenuScrollViewer">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect">
                                <Setter.Value>
                                    <Binding Path="VerticalOffset" ElementName="PART_SubMenuScrollViewer" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect">
                                <Setter.Value>
                                    <Binding Path="HorizontalOffset" ElementName="PART_SubMenuScrollViewer" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Canvas.Top" TargetName="OverlayRect">
                                <Setter.Value>
                                    <Binding Path="VerticalOffset" ElementName="PART_SubMenuScrollViewer" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Canvas.Left" TargetName="OverlayRect">
                                <Setter.Value>
                                    <Binding Path="HorizontalOffset" ElementName="PART_SubMenuScrollViewer" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>-->
                        <DataTrigger Binding="{Binding Path=IsInQuickAccessToolBar, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter Property="FrameworkElement.Height" TargetName="PART_ToggleButton">
                                <Setter.Value>
                                    <s:Double>NaN</s:Double>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <Trigger Property="UIElement.IsEnabled">
                            <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                                <Setter.Value>
                                    <SolidColorBrush>#FF9E9E9E</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <!--<Trigger Property="RibbonMenuButton.HasGallery">
                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" TargetName="PART_SubMenuScrollViewer">
                                <Setter.Value>
                                    <x:Static Member="ScrollBarVisibility.Disabled" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" TargetName="PART_SubMenuScrollViewer">
                                <Setter.Value>
                                    <x:Static Member="ScrollBarVisibility.Disabled" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                        </Trigger>-->
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="RibbonMenuButton.CanUserResizeHorizontally">
                                    <Condition.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="RibbonMenuButton.CanUserResizeVertically">
                                    <Condition.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="UIElement.Visibility" TargetName="ResizeControl">
                                <Setter.Value>
                                    <x:Static Member="Visibility.Visible" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>-->
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="RibbonMenuButton.CanUserResizeHorizontally">
                                    <Condition.Value>
                                        <s:Boolean>False</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="RibbonMenuButton.CanUserResizeVertically">
                                    <Condition.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <Setter Property="UIElement.Visibility" TargetName="ResizeControl">
                                <Setter.Value>
                                    <x:Static Member="Visibility.Visible" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FrameworkElement.Style" TargetName="PART_ResizeThumb">
                                <Setter.Value>
                                    <Style TargetType="Thumb">
                                        <Style.Resources>
                                            <ResourceDictionary />
                                        </Style.Resources>
                                        <Setter Property="FrameworkElement.Height">
                                            <Setter.Value>
                                                <s:Double>11</s:Double>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FrameworkElement.Cursor">
                                            <Setter.Value>
                                                <Cursor>SizeNS</Cursor>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Thumb">
                                                    <Border Background="#00FFFFFF">
                                                        <Path Margin="0,0,2,2" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                                                            <Path.Data>
                                                                <RectangleGeometry Rect="0,0,11,3" />
                                                            </Path.Data>
                                                            <Path.Fill>
                                                                <DrawingBrush ViewportUnits="Absolute" ViewboxUnits="Absolute" Viewport="0,0,3,3" Viewbox="0,0,3,3" TileMode="Tile">
                                                                    <DrawingBrush.Drawing>
                                                                        <DrawingGroup>
                                                                            <DrawingGroup.Children>
                                                                                <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z" />
                                                                            </DrawingGroup.Children>
                                                                        </DrawingGroup>
                                                                    </DrawingBrush.Drawing>
                                                                </DrawingBrush>
                                                            </Path.Fill>
                                                        </Path>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>-->
                        <!--<Trigger Property="RibbonMenuButton.IsDropDownPositionedAbove">
                            <Setter Property="Grid.Row" TargetName="ResizeControl">
                                <Setter.Value>
                                    <s:Int32>0</s:Int32>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderThickness" TargetName="ResizeControl">
                                <Setter.Value>
                                    <Thickness>0,0,0,1</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                        </Trigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="RibbonMenuButton.IsDropDownPositionedAbove">
                                    <Condition.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="RibbonMenuButton.CanUserResizeHorizontally">
                                    <Condition.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                                <Condition Property="RibbonMenuButton.CanUserResizeVertically">
                                    <Condition.Value>
                                        <s:Boolean>True</s:Boolean>
                                    </Condition.Value>
                                </Condition>
                            </MultiTrigger.Conditions>
                            <!--<Setter Property="FrameworkElement.Style" TargetName="PART_ResizeThumb">
                                <Setter.Value>
                                    <Style TargetType="Thumb">
                                        <Style.Triggers>
                                            <Trigger Property="FrameworkElement.FlowDirection">
                                                <Setter Property="FrameworkElement.Cursor">
                                                    <Setter.Value>
                                                        <Cursor>SizeNWSE</Cursor>
                                                    </Setter.Value>
                                                </Setter>
                                                <Trigger.Value>
                                                    <x:Static Member="FlowDirection.RightToLeft" />
                                                </Trigger.Value>
                                            </Trigger>
                                        </Style.Triggers>
                                        <Style.Resources>
                                            <ResourceDictionary />
                                        </Style.Resources>
                                        <Setter Property="FrameworkElement.Width">
                                            <Setter.Value>
                                                <s:Double>11</s:Double>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FrameworkElement.Height">
                                            <Setter.Value>
                                                <s:Double>11</s:Double>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FrameworkElement.VerticalAlignment">
                                            <Setter.Value>
                                                <x:Static Member="VerticalAlignment.Top" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FrameworkElement.HorizontalAlignment">
                                            <Setter.Value>
                                                <x:Static Member="HorizontalAlignment.Right" />
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="FrameworkElement.Cursor">
                                            <Setter.Value>
                                                <Cursor>SizeNESW</Cursor>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Thumb">
                                                    <Border Background="#00FFFFFF">
                                                        <Path Data="M0,0L0,3 3,3 3,6 6,6 6,9 9,9 9,11 11,11 11,0z" Margin="0,2,2,0">
                                                            <Path.Fill>
                                                                <DrawingBrush ViewportUnits="Absolute" ViewboxUnits="Absolute" Viewport="0,0,3,3" Viewbox="0,0,3,3" TileMode="Tile">
                                                                    <DrawingBrush.Drawing>
                                                                        <DrawingGroup>
                                                                            <DrawingGroup.Children>
                                                                                <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z" />
                                                                            </DrawingGroup.Children>
                                                                        </DrawingGroup>
                                                                    </DrawingBrush.Drawing>
                                                                </DrawingBrush>
                                                            </Path.Fill>
                                                        </Path>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>-->
                        </MultiTrigger>
                        <Trigger Property="ItemsControl.HasItems">
                            <Setter Property="RibbonTwoLineText.PathData" TargetName="PART_ToggleButton">
                                <Setter.Value>
                                    <x:Null />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <!--<Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup">
                            <Setter Property="FrameworkElement.Margin" TargetName="Shadow">
                                <Setter.Value>
                                    <Thickness>0,0,5,5</Thickness>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="Shadow">
                                <Setter.Value>
                                    <Color>#71000000</Color>
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>True</s:Boolean>
                            </Trigger.Value>
                        </Trigger>-->
                        <Trigger Property="Popup.IsOpen" SourceName="PART_Popup">
                            <Setter Property="Popup.PopupAnimation" TargetName="PART_Popup">
                                <Setter.Value>
                                    <x:Static Member="PopupAnimation.None" />
                                </Setter.Value>
                            </Setter>
                            <Trigger.Value>
                                <s:Boolean>False</s:Boolean>
                            </Trigger.Value>
                        </Trigger>
                        <!--<DataTrigger Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True">
                            <Setter Property="UIElement.Visibility" TargetName="BackgroundCanvas">
                                <Setter.Value>
                                    <x:Static Member="Visibility.Collapsed" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="Shadow">
                                <Setter.Value>
                                    <Color>#00FFFFFF</Color>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Popup.PopupAnimation" TargetName="PART_Popup">
                                <Setter.Value>
                                    <x:Static Member="PopupAnimation.None" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="TextElement.Foreground" TargetName="PART_SubMenuScrollViewer">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.HighlightTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="MenuBorder">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Panel.Background" TargetName="MenuBorder">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.MenuBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Border.CornerRadius" TargetName="MenuBorder">
                                <Setter.Value>
                                    <CornerRadius>0,0,0,0</CornerRadius>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Border.BorderBrush" TargetName="ResizeControl">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Panel.Background" TargetName="ResizeControl">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.MenuBrushKey}" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Panel.Background" TargetName="SubMenuInnerBorder">
                                <Setter.Value>
                                    <SolidColorBrush>#00FFFFFF</SolidColorBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Border.CornerRadius" TargetName="SubMenuInnerBorder">
                                <Setter.Value>
                                    <CornerRadius>0,0,0,0</CornerRadius>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.ControlTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="False" />
                                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="TextElement.Foreground" TargetName="MainGrid">
                                <Setter.Value>
                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="RibbonToggleButton">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ext:JCHUIService.IconColor" Value="{StaticResource PrimaryColor1}"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RibbonToggleButton">
                    <Border Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Padding="22,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <jchctrl:JCHIcon Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconPadding) }" x:Name="IconImage" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconHeight)}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconWidth)}" Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconColor)}" Type="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.IconType)}" AwesomeIcon="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.AwesomeIcon)}" VectorResource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.VectorResource)}" ImagePath="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ext:JCHUIService.ImagePath)}" />
                            <TextBlock Grid.Row="1" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Label}" FontSize="10" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsDefaulted" Value="True">
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource PrimaryColor4}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor4}"/>
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter Property="Background" Value="{StaticResource OtherColor4}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor4}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource OtherColor4}"/>
                            <Setter Property="ext:JCHUIService.IconColor"  Value="{StaticResource OtherColor4}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="RibbonMenuItem">
        <Setter Property="ext:JCHUIService.IconHeight" Value="10"/>
        <Setter Property="ext:JCHUIService.IconWidth" Value="10"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="ext:JCHUIService.IconColor" Value="{StaticResource PrimaryColor1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RibbonMenuItem}">
                    <Grid x:Name="MainGrid" SnapsToDevicePixels="True">
                        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid VerticalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="Icon" Height="{TemplateBinding ext:JCHUIService.IconHeight}" Width="{TemplateBinding ext:JCHUIService.IconWidth}" Visibility="Collapsed" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Focusable="False" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                <ContentPresenter Width="{TemplateBinding ext:JCHUIService.IconWidth}" Height="{TemplateBinding ext:JCHUIService.IconHeight}" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>

                                <fa:ImageAwesome Height="{TemplateBinding ext:JCHUIService.IconHeight}" Width="{TemplateBinding ext:JCHUIService.IconWidth}" x:Name="IconImage" Foreground="{TemplateBinding ext:JCHUIService.IconColor}" Icon="{TemplateBinding ext:JCHUIService.AwesomeIcon}" />



                                <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="#FF212121" FlowDirection="LeftToRight"  Visibility="Collapsed" VerticalAlignment="Center"/>
                                <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="1" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                                <Path x:Name="Arrow" Grid.Column="2" Data="M0,0L4,3.5 0,7z" Fill="{TemplateBinding Foreground}" Margin="100,3,0,0" Visibility="Collapsed" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Custom" VerticalOffset="-1">
                            <Border BorderThickness="{TemplateBinding Border.BorderThickness}" CornerRadius="2,2,2,2" BorderBrush="{x:Null}" Background="{x:Null}" Name="MenuBorder">
                                <Border BorderThickness="0,0,0,0" CornerRadius="2,2,2,2" Background="#F0FFFFFF" Name="SubMenuInnerBorder">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />

                                        <Border BorderThickness="0,1,0,0" BorderBrush="{x:Null}" Background="#FFE5EFF9" Name="ResizeControl" Visibility="Collapsed" Grid.Row="1">
                                            <Thumb Name="PART_ResizeThumb">
                                                <Thumb.Style>
                                                    <Style TargetType="Thumb">
                                                        <Style.Triggers>
                                                            <Trigger Property="FrameworkElement.FlowDirection">
                                                                <Setter Property="FrameworkElement.Cursor">
                                                                    <Setter.Value>
                                                                        <Cursor>SizeNESW</Cursor>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Trigger.Value>
                                                                    <x:Static Member="FlowDirection.RightToLeft" />
                                                                </Trigger.Value>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                        <Setter Property="FrameworkElement.Width">
                                                            <Setter.Value>
                                                                <s:Double>11</s:Double>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="FrameworkElement.Height">
                                                            <Setter.Value>
                                                                <s:Double>11</s:Double>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="FrameworkElement.VerticalAlignment">
                                                            <Setter.Value>
                                                                <x:Static Member="VerticalAlignment.Bottom" />
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="FrameworkElement.HorizontalAlignment">
                                                            <Setter.Value>
                                                                <x:Static Member="HorizontalAlignment.Right" />
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="FrameworkElement.Cursor">
                                                            <Setter.Value>
                                                                <Cursor>SizeNWSE</Cursor>
                                                            </Setter.Value>
                                                        </Setter>
                                                        <Setter Property="Control.Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="Thumb">
                                                                    <Border Background="#00FFFFFF">
                                                                        <Path Data="M9,0L11,0 11,11 0,11 0,9 3,9 3,6 6,6 6,3 9,3z" Margin="0,0,2,2">
                                                                            <Path.Fill>
                                                                                <DrawingBrush ViewportUnits="Absolute" ViewboxUnits="Absolute" Viewport="0,0,3,3" Viewbox="0,0,3,3" TileMode="Tile">
                                                                                    <DrawingBrush.Drawing>
                                                                                        <DrawingGroup>
                                                                                            <DrawingGroup.Children>
                                                                                                <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z" />
                                                                                            </DrawingGroup.Children>
                                                                                        </DrawingGroup>
                                                                                    </DrawingBrush.Drawing>
                                                                                </DrawingBrush>
                                                                            </Path.Fill>
                                                                        </Path>
                                                                    </Border>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Thumb.Style>
                                            </Thumb>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ext:JCHUIService.AwesomeIcon" Value="None">
                            <Setter Property="Visibility" TargetName="IconImage" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" TargetName="templateRoot" Value="#3D26A0DA"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#FF26A0DA"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                            <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsHighlighted" Value="True"/>
                                <Condition Property="IsEnabled" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="templateRoot" Value="#0A000000"/>
                            <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>
                        </MultiTrigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasItems" Value="True"/>
                                <Condition Property="IsCheckable" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="Arrow" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="CanUserResizeHorizontally" Value="True"/>
                                <Condition Property="CanUserResizeVertically" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="ResizeControl" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="CanUserResizeHorizontally" Value="False"/>
                                <Condition Property="CanUserResizeVertically" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" TargetName="ResizeControl" Value="Visible"/>
                            <Setter Property="Style" TargetName="PART_ResizeThumb">
                                <Setter.Value>
                                    <Style TargetType="{x:Type Thumb}">
                                        <Setter Property="Height" Value="11"/>
                                        <Setter Property="Cursor" Value="SizeNS"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border Background="Transparent">
                                                        <Path HorizontalAlignment="Center" Margin="0,0,2,2" VerticalAlignment="Bottom">
                                                            <Path.Data>
                                                                <RectangleGeometry Rect="0,0,11,3"/>
                                                            </Path.Data>
                                                            <Path.Fill>
                                                                <DrawingBrush TileMode="Tile" Viewbox="0,0,3,3" Viewport="0,0,3,3" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                                                                    <DrawingBrush.Drawing>
                                                                        <DrawingGroup>
                                                                            <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z"/>
                                                                        </DrawingGroup>
                                                                    </DrawingBrush.Drawing>
                                                                </DrawingBrush>
                                                            </Path.Fill>
                                                        </Path>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsDropDownPositionedLeft" Value="True"/>
                                <Condition Property="CanUserResizeHorizontally" Value="True"/>
                                <Condition Property="CanUserResizeVertically" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Style" TargetName="PART_ResizeThumb">
                                <Setter.Value>
                                    <Style TargetType="{x:Type Thumb}">
                                        <Setter Property="Width" Value="11"/>
                                        <Setter Property="Height" Value="11"/>
                                        <Setter Property="VerticalAlignment" Value="Bottom"/>
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                        <Setter Property="Cursor" Value="SizeNESW"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border Background="Transparent">
                                                        <Path Data="M0,0L2,0 2,3 5,3 5,6 8,6 8,9 11,9 11,11 0,11z" Margin="2,0,0,2">
                                                            <Path.Fill>
                                                                <DrawingBrush TileMode="Tile" Viewbox="0,0,3,3" Viewport="0,0,3,3" ViewportUnits="Absolute" ViewboxUnits="Absolute">
                                                                    <DrawingBrush.Drawing>
                                                                        <DrawingGroup>
                                                                            <GeometryDrawing Brush="#FF6C747D" Geometry="M0,0L2,0 2,2 0,2z"/>
                                                                        </DrawingGroup>
                                                                    </DrawingBrush.Drawing>
                                                                </DrawingBrush>
                                                            </Path.Fill>
                                                        </Path>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="FlowDirection" Value="RightToLeft">
                                                <Setter Property="Cursor" Value="SizeNWSE"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <Trigger Property="IsCheckable" Value="True">
                            <Setter Property="Visibility" TargetName="Arrow" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsOpen" SourceName="PART_Popup" Value="False">
                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>