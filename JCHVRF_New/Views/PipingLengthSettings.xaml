<Window x:Class="JCHVRF_New.Views.PipingLengthSettings"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JCHVRF_New.Views"
        xmlns:cls="clr-namespace:JCHVRF.Model.New"
        xmlns:CustomControls="clr-namespace:CustomControls"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        mc:Ignorable="d"
        xmlns:conv="clr-namespace:JCHVRF_New.Common.UI.Converters"
        xmlns:rad="clr-namespace:JCHVRF_New"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        x:Name="ProjectWizard"  xmlns:models="clr-namespace:JCHVRF_New.Model"
        xmlns:Lang="clr-namespace:JCHVRF_New.LanguageData"
        xmlns:conv1="clr-namespace:JCHVRF_New.Model" 
        prism:ViewModelLocator.AutoWireViewModel="True"
        MinWidth="700" MinHeight="400"
        d:DesignHeight="400" d:DesignWidth="700" Closing="Window_Closing">
    <Window.Resources>
        <conv1:LanguageNameConverter x:Key="LangNameConverter" />
        <Style TargetType="TextBlock">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Margin" Value="10,2,0,0"/>
        </Style>
        <Style TargetType="GroupBox">

        </Style>
        <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="{StaticResource PrimaryColor1}" />
            <Setter Property="Foreground" Value="White"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>


    </Window.Resources>
    <DockPanel>
        <Grid DockPanel.Dock="Top">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height=" *"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border BorderThickness="1" BorderBrush="Black">
                <Grid Height="85" VerticalAlignment="Bottom">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="8*"/>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="3" Background="{StaticResource PrimaryColor1}">
                        <TextBlock VerticalAlignment="Center" Text="{Lang:LocalisedText Key=PIPING_LENGTH}" FontWeight="Bold"  HorizontalAlignment="Center" Foreground="White"/>
                    </Border>
                    <TextBlock  Margin="10,5,0,0" Grid.Row="1"  Text="{Lang:LocalisedText Key=EQUIVALENT_LENGTH}" />
                    <TextBlock  Margin="10,5,0,0" Grid.Row="2" Text="{Lang:LocalisedText Key=FIRST_BRANCH_TO_IDU}"/>
                    <TextBox Name="EqPipeLenght" Grid.Column="1" Margin= "2" Grid.Row="1" PreviewKeyUp="myTestBox_PreviewKeyDown" PreviewKeyDown="myTestBox_PreviewKeyDown"  KeyDown="txtBindPropertyChange_KeyDown" IsReadOnly="{Binding IsEditableEqPipeLength}" Text="{Binding jctxtEqPipeLength}" />
                    <TextBlock Grid.Column="2" Grid.Row="1" Text="{Binding Eq_lengthError}" Margin="25,2,0,0" Foreground="Red" Visibility="{Binding validatEquivPipeLength, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ></TextBlock>
                    <TextBox Name="FirstPipeLength" Grid.Column="1" Margin= "2" Grid.Row="2" PreviewKeyUp="myTestBox_PreviewKeyDown" PreviewKeyDown="myTestBox_PreviewKeyDown" KeyDown="txtBindPropertyChange_KeyDown" IsReadOnly="{Binding IsEditableFirstPipeLength}" Text="{Binding jctxtFirstPipeLength}" />
                    <!--<TextBlock Grid.Column="2" Grid.Row="1" Text="[0-90]" Margin="25,2,0,0" Foreground="Red" Visibility=Converter={conv:DoubleGreaterThanParameterConverter}, ConverterParameter=191}" Value="True"></TextBlock>-->
                    <TextBlock Grid.Column="2" Grid.Row="2" Text="{Binding HD_lengthError}" Margin="25,2,0,0" Foreground="Red" Visibility="{Binding validatFirstBranchIDU,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" ></TextBlock>
                    <TextBlock Grid.Column="2" Grid.Row="1" Text="{Binding LengthUnit}" />
                    <TextBlock Grid.Column="2" Grid.Row="2" Text="{Binding LengthUnit}" />
                    <TextBlock Grid.Column="2" Grid.Row="2" Text="{Binding LengthUnit}" />
                </Grid>
            </Border>
            <Border Grid.Row="1" Margin="0,10,0,0" BorderThickness="1" BorderBrush="Black">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Border Grid.ColumnSpan="3" Background="{StaticResource PrimaryColor1}">
                        <TextBlock VerticalAlignment="Center" Text="{Lang:LocalisedText Key=POSITION_OF_INDOOR_MSG}"  FontWeight="Bold"  HorizontalAlignment="Center" Foreground="White"/>
                    </Border>
                    <DockPanel Grid.Row="1" Background="#AC7d51" LastChildFill="True">
                        <Button Content="{Lang:LocalisedText Key=SETTING}" DockPanel.Dock="Right" Margin="5">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding Settings}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <TextBlock  Name="MaxIndoorHeightDifference" DockPanel.Dock="Top" Text="{Binding TxtMaxIndoorHeightDifferences, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock  Name="MaxOutdoorHeightDifference"  Text="{Binding TxtMaxOutdoorHeightDifferences, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </DockPanel>
                </Grid>
            </Border>
            <DataGrid Name="dgvPipeLength" Grid.Row="2" Margin="0,10,0,0" FontSize="13" HeadersVisibility="Column"
                      SelectedIndex="{Binding SelectedRow, Mode=TwoWay}" SelectionMode="Extended"
                      ItemsSource="{Binding Path=ListIDU,UpdateSourceTrigger=PropertyChanged}" 
                      RowHeight="35"  AutoGenerateColumns="False"
                      VerticalScrollBarVisibility="Auto">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <prism:InvokeCommandAction Command="{Binding PipeLengthGridSelectionChanged}" TriggerParameterPath="Source.SelectedItems"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                        <Setter Property="Background" Value="{StaticResource PrimaryColor1}"></Setter>
                        <Setter Property="Foreground" Value="White"></Setter>
                        <Setter Property="Height" Value="30"></Setter>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="IndoorNo"  Width="*" Visibility="Hidden">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding IndoorNo}" HorizontalAlignment="Center" TextWrapping="Wrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Name" Width="*" Visibility="Hidden">
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <TextBlock Text="{Binding IndoorName}" HorizontalAlignment="Center"  TextWrapping="Wrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="{Lang:LocalisedText Key=NAME}" Width="*" >
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}"  HorizontalAlignment="Center"  TextWrapping="Wrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="{Lang:LocalisedText Key=POSITION}" Width="*">
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <TextBlock Text="{Binding PositionType}" HorizontalAlignment="Center" TextWrapping="Wrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="{Lang:LocalisedText Key=SETTING_HEIGHT_DIFFERENCE}" Width="*">
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <TextBlock Text="{Binding HeightDiff}" HorizontalAlignment="Center" TextWrapping="Wrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Visibility="Hidden" Header="{Lang:LocalisedText Key=INDOOR_TAG}" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate >
                                <TextBlock Text="{Binding IndoorTag}" HorizontalAlignment="Center" TextWrapping="Wrap"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Label Grid.Row="3"  Content="{Binding lblPipingLegthError}"  VerticalAlignment="Bottom" HorizontalAlignment="Center" Foreground="#DDF30707" ></Label>
        </Grid>
        <Popup IsOpen="{Binding IsPipingPopupOpened}" Placement="Center" Height="170" Width="Auto">
            <Border BorderThickness="1" BorderBrush="Black">
                <Grid Background="White">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Border Background="{StaticResource PrimaryColor1}" Grid.ColumnSpan="2">
                        <TextBlock VerticalAlignment="Center" Text="{Lang:LocalisedText Key=SETTING_HEIGHT_DIFFERENCE}" FontWeight="Bold"  HorizontalAlignment="Left" Foreground="White"/>
                    </Border>
                    <GroupBox Margin="5" Grid.Row="1" BorderBrush="Black" Header="{Lang:LocalisedText Key=SETTINGS}" Grid.ColumnSpan="2">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Lang:LocalisedText Key=POSITION}"   VerticalAlignment="Center"   Grid.Column="0"  Grid.Row="0"  HorizontalAlignment="Left" Width="Auto"/>
                            <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Text="{Lang:LocalisedText Key=HEIGHT_DIFFERENCE}" HorizontalAlignment="left" Width="Auto"/>
                            <ComboBox Grid.Row="0" Grid.Column="1" Text="{Binding Path=cmbPositionType }" ItemsSource="{Binding cmbPosition}"  SelectedIndex="{Binding SelectedIndex, Mode=TwoWay}"  SelectedValue="{Binding SelectedUnitType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  DisplayMemberPath="DisplayName" SelectedValuePath="DisplayName"/>

                            <TextBox  Uid="txtBindPropertyChange" PreviewKeyUp="myTestBox_PreviewKeyDown" PreviewKeyDown="myTestBox_PreviewKeyDown" KeyDown="txtBindPropertyChange_KeyDown"  Grid.Row="1" Grid.Column="1" IsReadOnly="{Binding IsEditable}"    Text="{Binding Path=TxtIndoorHighDifference }" Height="31" VerticalAlignment="Top"/>
                        </Grid>
                    </GroupBox>
                    <StackPanel Grid.Row="2" HorizontalAlignment="Center" Orientation="Horizontal" Grid.ColumnSpan="2">
                        <Button Margin="20,5" Content="{Lang:LocalisedText Key=OK}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding SettingsOk}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Button Margin="20,5" Content="{Lang:LocalisedText Key=CANCEL}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding SettingsCancel}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>
        </Popup>
        <!--<Label Content="{Binding lblPipingLegthError}"  Height="27" Width="688" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="-300,0,0,0" Foreground="#DDF30707" ></Label>-->
    </DockPanel>

</Window>
