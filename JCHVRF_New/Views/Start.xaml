<UserControl x:Class="JCHVRF_New.Views.Start"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:ext1="clr-namespace:JCHVRF_New.LanguageData"
             xmlns:conv1="clr-namespace:JCHVRF_New.Model"
             xmlns:local="clr-namespace:JCHVRF_New.Views"
             mc:Ignorable="d" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:xc="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:conv="clr-namespace:JCHVRF_New.Common.UI.Converters"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <conv1:LanguageNameConverter x:Key="LangNameConverter" />
        <ControlTemplate x:Key="ExpanderControlTemplate1" TargetType="{x:Type Expander}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="True">
                <DockPanel>
                    <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                        <ToggleButton.FocusVisualStyle>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border>
                                                <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.FocusVisualStyle>
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="19"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19"  VerticalAlignment="Center" Width="19"/>
                                                    <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <!--<Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>-->
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <ContentPresenter x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </DockPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Right">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                    <Setter Property="Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="19"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="-90"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle"  HorizontalAlignment="Center" Height="19"  VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <!--<Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>-->
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Up">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                    <Setter Property="Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="19"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="180"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19"  VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <!--<Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>-->
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Left">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                    <Setter Property="Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="19"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="90"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19"  VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <!--<Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>-->
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ExpanderControlTemplate2" TargetType="{x:Type Expander}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="True">
                <DockPanel>
                    <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                        <ToggleButton.FocusVisualStyle>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border>
                                                <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.FocusVisualStyle>
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="19"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Ellipse x:Name="circle"  HorizontalAlignment="Center" Height="19"  VerticalAlignment="Center" Width="19"/>
                                                    <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <!--<Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>-->
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <ContentPresenter x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </DockPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Right">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                    <Setter Property="Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="19"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="-90"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle"  HorizontalAlignment="Center" Height="19"  VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <!--<Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>-->
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Up">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                    <Setter Property="Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="19"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="180"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle"  HorizontalAlignment="Center" Height="19"  VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <!--<Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>-->
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Left">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                    <Setter Property="Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="19"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="90"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle"  HorizontalAlignment="Center" Height="19"  VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <!--<Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>-->
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="ExpanderControlTemplate3" TargetType="{x:Type Expander}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="True">
                <DockPanel>
                    <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                        <ToggleButton.FocusVisualStyle>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border>
                                                <Rectangle Margin="0" SnapsToDevicePixels="True" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.FocusVisualStyle>
                        <ToggleButton.Style>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="19"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Ellipse x:Name="circle"  HorizontalAlignment="Center" Height="19"  VerticalAlignment="Center" Width="19"/>
                                                    <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <!--<Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>-->
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>
                    <ContentPresenter x:Name="ExpandSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" DockPanel.Dock="Bottom" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </DockPanel>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsExpanded" Value="True">
                    <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Right">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
                    <Setter Property="Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="19"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="-90"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle"  HorizontalAlignment="Center" Height="19" VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <!--<Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>-->
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Up">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
                    <Setter Property="Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="19"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="180"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle"  HorizontalAlignment="Center" Height="19"  VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <!--<Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>-->
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="ExpandDirection" Value="Left">
                    <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
                    <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
                    <Setter Property="Style" TargetName="HeaderSite">
                        <Setter.Value>
                            <Style TargetType="{x:Type ToggleButton}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border Padding="{TemplateBinding Padding}">
                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="19"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Grid>
                                                        <Grid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="90"/>
                                                            </TransformGroup>
                                                        </Grid.LayoutTransform>
                                                        <Ellipse x:Name="circle" Fill="White" HorizontalAlignment="Center" Height="19" Stroke="#FF333333" VerticalAlignment="Center" Width="19"/>
                                                        <Path x:Name="arrow" Data="M1,1.5L4.5,5 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="False" Stroke="#FF333333" StrokeThickness="2" VerticalAlignment="Center"/>
                                                    </Grid>
                                                    <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="Data" TargetName="arrow" Value="M1,4.5L4.5,1 8,4.5"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF5593FF"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFF3F9FF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FF3C77DD"/>
                                                    <Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFD9ECFF"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="Black"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Stroke" TargetName="circle" Value="#FFBCBCBC"/>
                                                    <Setter Property="Fill" TargetName="circle" Value="#FFE6E6E6"/>
                                                    <Setter Property="Stroke" TargetName="arrow" Value="#FF707070"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>

    <Grid x:Name="MainGrid">
        <StackPanel Orientation="Vertical" >
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=ActualWidth, Converter={conv:DoubleGreaterThanParameterConverter}, ConverterParameter=300}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>
            <Expander   FlowDirection="LeftToRight" Style="{StaticResource ExpanderStyle}" IsExpanded="True"  ExpandDirection="Down" Height="Auto" Template="{DynamicResource ExpanderControlTemplate3}">
                <Expander.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Height="20" Text="{ext1:LocalisedText Key=LENGTH}" />
                    </DataTemplate>
                </Expander.HeaderTemplate>
                <DataGrid x:Name="PipingLength"  HeadersVisibility="Column" Height="Auto" Width="Auto"
          AutoGenerateColumns = "False"   Margin="0,0,0,0" IsReadOnly="True" BorderBrush="LightGray" 
                      CanUserAddRows="False" CanUserResizeColumns="true" GridLinesVisibility="All"  ItemsSource="{Binding Path=ListPipingInfoLength, UpdateSourceTrigger=PropertyChanged}" RowHeight="20">
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="FontSize" Value="9"/>
                            <Setter Property="MinHeight" Value="10"/>
                            <Setter Property="MaxHeight" Value="20"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>

                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="{ext1:LocalisedText Key=DESCRIPTION}" Width="98">
                            <DataGridTemplateColumn.CellTemplate >
                                <DataTemplate>
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition  Width="*"></ColumnDefinition>
                                            <ColumnDefinition Width="5"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" FontSize="9" Height="20" Margin="-5,-5,-5,-5" HorizontalAlignment="Left" Text ="{Binding DescriptionLength}" ></TextBlock>
                                        <TextBlock  Margin="0,-8,-5,-8"  Grid.Column="1" HorizontalAlignment="Right" Width="5" Background ="{Binding ColorLength}" Height="22" ></TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <DataGridTextColumn Header = "Project(m)" FontSize="9" Binding = "{Binding ProjectLength}" ToolTipService.ToolTip="{Binding}" Width="Auto">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="ToolTip" Value="{Binding ProjectLength    }" />
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header = "Max(m)" FontSize="9" Binding = "{Binding MaxLength}" ToolTipService.ToolTip="{Binding}" Width="*">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="ToolTip" Value="{Binding MaxLength}" />
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Expander>
            <Expander Header="{ext1:LocalisedText Key=HEIGHT}" FlowDirection="LeftToRight" Style="{StaticResource ExpanderStyle}" IsExpanded="True" ExpandDirection="Down" Height="Auto" Template="{DynamicResource ExpanderControlTemplate2}" >
                <DataGrid x:Name="PipingHeight"  HeadersVisibility="Column" Height="Auto" Width="Auto"
          AutoGenerateColumns = "False"   Margin="0,0,0,0" IsReadOnly="True" BorderBrush="LightGray" 
                      CanUserAddRows="False" CanUserResizeColumns="true" GridLinesVisibility="All"  ItemsSource="{Binding Path=ListPipingInfoHeight, UpdateSourceTrigger=PropertyChanged}" RowHeight="20">
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="DataGridColumnHeader">
                            <Setter Property="FontSize" Value="9"/>
                            <Setter Property="MinHeight" Value="10"/>
                            <Setter Property="MaxHeight" Value="20"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="{ext1:LocalisedText Key=DESCRIPTION}" Width="98">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <Grid >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition  Width="*"></ColumnDefinition>
                                            <ColumnDefinition Width="5"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" FontSize="9" Height="20" Margin="-5,-5,-5,-5" HorizontalAlignment="Left" Text ="{Binding DescriptionHeight}" ></TextBlock>
                                        <TextBlock  Margin="0,-8,-5,-8"  Grid.Column="1" HorizontalAlignment="Right" Width="5" Background ="{Binding ColorHeight}" Height="22" ></TextBlock>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--<DataGridTemplateColumn Header="Project(m)" Width="Auto">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text ="{Binding ProjectHeight}" FontSize="9"></TextBlock>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>-->

                        <DataGridTextColumn Header = "Project(m)" FontSize="9" Binding = "{Binding ProjectHeight}" ToolTipService.ToolTip="{Binding}" Width="Auto">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="ToolTip" Value="{Binding ProjectHeight}" />
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header = "Max(m)" FontSize="9" Binding = "{Binding MaxHeight}" ToolTipService.ToolTip="{Binding}" Width="*">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="ToolTip" Value="{Binding MaxHeight}" />
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </Expander>
        </StackPanel>
        <!--For enlarged PipingInformation window-->
        <Grid Name="grdPipingInfo" >
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=ActualWidth, Converter={conv:DoubleGreaterThanParameterConverter}, ConverterParameter=300}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
                <RowDefinition Height="0"></RowDefinition>
                <RowDefinition Height="50"></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="5"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="5"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="5"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <!--Title bar-->
            <!--<TextBlock Background="LightGray" Opacity=".5" Grid.Row="0" Grid.ColumnSpan="7"></TextBlock>
            <Button Name="btnminimize" FontWeight="Bold"  Width="30" Margin="0,0,0,0"
                    Grid.Column="7" VerticalAlignment="Center" HorizontalAlignment="Left">
                <Button.Template>
                    <ControlTemplate>
                        <fa:ImageAwesome x:Name="iconforward" Height="10" Width="10" Icon="Backward" Foreground="Gray" />
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button Name="btnClosePipingInfo" FontWeight="Bold"  Width="30" Margin="0,0,0,0"
                    Grid.Column="7" VerticalAlignment="Center" HorizontalAlignment="Right">
                <Button.Template>
                    <ControlTemplate>
                        <fa:ImageAwesome x:Name="iconClose" Height="10" Width="10" Icon="Close" Foreground="Gray" />
                    </ControlTemplate>
                </Button.Template>
            </Button>-->
            <!--Header-->
            <TextBlock Text="Description" Grid.Column="1" Grid.ColumnSpan="3" HorizontalAlignment="Left" 
                       VerticalAlignment="Center"
                       Grid.Row="1"></TextBlock>
            <StackPanel Grid.Column="3" Grid.Row="1" Orientation="Vertical">
                <TextBlock Text="Project" ></TextBlock>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="("></TextBlock>
                    <TextBlock Text="m"></TextBlock>
                    <TextBlock Text=")"></TextBlock>
                </StackPanel>
            </StackPanel>
            <StackPanel Grid.Column="5" Grid.Row="1" Orientation="Vertical">
                <TextBlock Text="Max" ></TextBlock>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="("></TextBlock>
                    <TextBlock Text="m"></TextBlock>
                    <TextBlock Text=")"></TextBlock>
                </StackPanel>
            </StackPanel>
            <TextBlock Text="Result" Grid.Column="8" Grid.Row="1"></TextBlock>
            <!--Line below Header-->
            <Line  X1="0" Y1="0"  
                   X2="900" Y2="0"  
                   Stroke="Black"  
                   StrokeThickness="1"
                   Grid.Row="1" Margin="0,0,0,0" Grid.ColumnSpan="8" Height="1" VerticalAlignment="Bottom"></Line>

            <TextBlock Text="Length" Grid.Row="2" Grid.RowSpan="5" Grid.Column="0" HorizontalAlignment="Center"
                       VerticalAlignment="Center"></TextBlock>
            <Line  X1="0" Y1="0"  
            X2="0" Y2="1000"  
            Stroke="Black"  
            StrokeThickness="1"
            Grid.Column="1" Margin="7,15,0,0" Grid.Row="2" Grid.RowSpan="14" Height="1" HorizontalAlignment="Left"  ></Line>
            <TextBlock Text="Total pipe length" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left"
                       VerticalAlignment="Center"  Margin="15,0,0,0"></TextBlock>
            <TextBlock Text="Maximum piping length (Actual Length)"  Margin="15,0,0,0" Grid.Row="3"  Grid.Column="1" HorizontalAlignment="Left"
                       VerticalAlignment="Center"></TextBlock>
            <TextBlock Text="Maximum piping length (Eqivalent Length)"  Margin="15,0,0,0" Grid.Row="4"  Grid.Column="1" HorizontalAlignment="Left"
                       VerticalAlignment="Center"></TextBlock>
            <TextBlock Text="Maximum piping length between multi-kit of 1st branch and each indoor unit" Grid.Row="5"  Grid.Column="1" HorizontalAlignment="Left"
                       VerticalAlignment="Center"  Margin="15,0,0,0"></TextBlock>
            <TextBlock Text="Maximum piping length between each multi-kit and each indoor unit" Grid.Row="6"  Grid.Column="1" HorizontalAlignment="Left"
                       VerticalAlignment="Center"  Margin="15,0,0,0"></TextBlock>

            <TextBlock Text="Height" Grid.Row="7" Grid.RowSpan="3" Grid.Column="0" HorizontalAlignment="Center"
                       VerticalAlignment="Center"></TextBlock>

            <TextBlock Text="Height difference between (O.U. is upper)" Grid.Row="7" Grid.Column="1" HorizontalAlignment="Left"
                       VerticalAlignment="Center"  Margin="15,0,0,0"></TextBlock>
            <TextBlock Text="Height difference between (O.U. is lower)" Grid.Row="8"  Grid.Column="1" HorizontalAlignment="Left"
                       VerticalAlignment="Center"  Margin="15,0,0,0"></TextBlock>
            <TextBlock Text="Height difference between indoor units" Grid.Row="9"  Grid.Column="1" HorizontalAlignment="Left"
                       VerticalAlignment="Center"  Margin="15,0,0,0"></TextBlock>

            <TextBlock Text="IU Connectable (Min./Recommended/max.)" Grid.Row="10"  Grid.Column="1"  HorizontalAlignment="Left"
                       VerticalAlignment="Center"  Margin="15,0,0,0"></TextBlock>
            <TextBlock Text="Connected Cap.(Min. to Max.)" Grid.Row="11"  Grid.Column="1"  HorizontalAlignment="Left"
                       VerticalAlignment="Center"  Margin="15,0,0,0"></TextBlock>

            <!--Project column: harcoding the data for now for the demo-->

            <TextBlock Grid.Column="3" Grid.Row="2" Text="410"></TextBlock>
            <TextBlock Grid.Column="3" Grid.Row="3" Text="200"></TextBlock>
            <TextBlock Grid.Column="3" Grid.Row="4" Text="40"></TextBlock>
            <TextBlock Grid.Column="3" Grid.Row="5" Text="20"></TextBlock>
            <TextBlock Grid.Column="3" Grid.Row="6" Text="0"></TextBlock>
            <TextBlock Grid.Column="3" Grid.Row="7" Text="0"></TextBlock>
            <TextBlock Grid.Column="3" Grid.Row="8" Text="0"></TextBlock>
            <TextBlock Grid.Column="3" Grid.Row="9" Text="0"></TextBlock>
            <TextBlock Grid.Column="3" Grid.Row="10" Text="3"></TextBlock>
            <TextBlock Grid.Column="3" Grid.Row="11" Text="56%"></TextBlock>

            <!--Max column: harcoding the data for now for the demo-->

            <TextBlock Grid.Column="5" Grid.Row="2" Text="1000"></TextBlock>
            <TextBlock Grid.Column="5" Grid.Row="3" Text="165"></TextBlock>
            <TextBlock Grid.Column="5" Grid.Row="4" Text="190"></TextBlock>
            <TextBlock Grid.Column="5" Grid.Row="5" Text="90"></TextBlock>
            <TextBlock Grid.Column="5" Grid.Row="6" Text="50"></TextBlock>
            <TextBlock Grid.Column="5" Grid.Row="7" Text="50"></TextBlock>
            <TextBlock Grid.Column="5" Grid.Row="8" Text="40"></TextBlock>
            <TextBlock Grid.Column="5" Grid.Row="9" Text="30"></TextBlock>
            <TextBlock Grid.Column="5" Grid.Row="10" Text="50"></TextBlock>
            <TextBlock Grid.Column="5" Grid.Row="11" Text="56%"></TextBlock>

            <!--Result column: harcoding the data for now for the demo-->

            <fa:ImageAwesome Icon="CheckCircle" Foreground="Green" Grid.Column="8" Grid.Row="2"></fa:ImageAwesome>
            <fa:ImageAwesome Icon="PlusCircle" Rotation="45" Foreground="Red"  Grid.Column="8" Grid.Row="3"></fa:ImageAwesome>
            <fa:ImageAwesome Icon="CheckCircle" Foreground="Green" Grid.Column="8" Grid.Row="4" ></fa:ImageAwesome>
            <fa:ImageAwesome Icon="CheckCircle" Foreground="Green" Grid.Column="8" Grid.Row="5" ></fa:ImageAwesome>
            <fa:ImageAwesome Icon="CheckCircle" Foreground="Green" Grid.Column="8" Grid.Row="6" ></fa:ImageAwesome>
            <fa:ImageAwesome Icon="CheckCircle" Foreground="Green" Grid.Column="8" Grid.Row="7" ></fa:ImageAwesome>
            <fa:ImageAwesome Icon="CheckCircle" Foreground="Green" Grid.Column="8" Grid.Row="8" ></fa:ImageAwesome>
            <fa:ImageAwesome Icon="CheckCircle" Foreground="Green" Grid.Column="8" Grid.Row="9" ></fa:ImageAwesome>
            <fa:ImageAwesome Icon="CheckCircle" Foreground="Green" Grid.Column="8" Grid.Row="10"></fa:ImageAwesome>
            <fa:ImageAwesome Icon="CheckCircle" Foreground="Green" Grid.Column="8" Grid.Row="11"></fa:ImageAwesome>
        </Grid>

    </Grid>


</UserControl>
