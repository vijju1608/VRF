<UserControl x:Class="JCHVRF_New.Views.HeatExchangerCanvasEquipment"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:ext1="clr-namespace:JCHVRF_New.LanguageData"
        xmlns:conv1="clr-namespace:JCHVRF_New.Model"    
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"             
        xmlns:af="clr-namespace:Lassalle.WPF.Flow;assembly=Lassalle.WPF.Flow"
        xmlns:local="clr-namespace:JCHVRF_New.Views"
        xmlns:xc="http://schemas.xceed.com/wpf/xaml/toolkit"             
        xmlns:view="clr-namespace:JCHVRF_New.Views"    
        xmlns:prism="http://prismlibrary.com/"
        xmlns:dock="http://schemas.xceed.com/wpf/xaml/avalondock"
        xmlns:dockctrl="clr-namespace:Xceed.Wpf.AvalonDock.Controls;assembly=Xceed.Wpf.AvalonDock"
        xmlns:const="clr-namespace:JCHVRF_New.Common.Constants"
        xmlns:jchctrl="clr-namespace:JCHVRF_New.Common.Controls"             
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        prism:ViewModelLocator.AutoWireViewModel="True"
        xmlns:ext="clr-namespace:JCHVRF_New.Common.UI.Extensions"       
        mc:Ignorable="d"
x:Name="HECanvasEquipment" Background="#FFFFFF"
             MinWidth="900"  MinHeight="580" MaxHeight="600">
    <UserControl.Resources>
        <conv1:LanguageNameConverter x:Key="LangNameConverter" />
        <Style x:Key="ComboBoxStyle1"
            TargetType="{x:Type ComboBox}">
            <Setter Property="BorderBrush" Value="{StaticResource OtherColor1}"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="5,0,0,0"/>
            <Setter Property="SnapsToDevicePixels"
                Value="true" />
            <Setter Property="OverridesDefaultStyle"
                Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
            <Setter Property="MinHeight"
                Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox"
                                                Storyboard.TargetProperty="(TextElement.Foreground).                       (SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                    Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="EditStates">
                                    <VisualState x:Name="Editable">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                Storyboard.TargetName="PART_EditableTextBox">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="{x:Static Visibility.Visible}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="(UIElement.Visibility)"
                                                Storyboard.TargetName="ContentSite">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                    Value="{x:Static Visibility.Hidden}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Uneditable" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ToggleButton x:Name="ToggleButton"
                                Grid.Column="2"
                                Focusable="false"
                                ClickMode="Press"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Template>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Grid Background="{TemplateBinding Background}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="20" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="Border"
                                                Grid.ColumnSpan="2"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                CornerRadius="5"
                                                BorderThickness="1"/>
                                            <jchctrl:JCHIcon Foreground="{TemplateBinding BorderBrush}" Grid.Column="1" Margin="0,0,5,0"  Type="Vector"  VectorResource="{StaticResource DownArrowIcon}" />
                                        </Grid>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter x:Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Left"/>
                            <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}"
                                HorizontalAlignment="Left"
                                Margin="{TemplateBinding Padding}"
                                Focusable="True"
                                Background="Transparent"
                                Visibility="Hidden"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                VerticalContentAlignment="Center"
                                IsReadOnly="{TemplateBinding IsReadOnly}">
                                <TextBox.Template>
                                    <ControlTemplate 
                                        TargetType="{x:Type TextBox}">
                                        <ScrollViewer x:Name="PART_ContentHost"
                                            Focusable="False"
                                            Background="{TemplateBinding Background}" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <Popup x:Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"
                                Focusable="False"
                                PopupAnimation="Slide">
                                <Grid x:Name="DropDown"
                                    SnapsToDevicePixels="True"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder"
                                        BorderThickness="1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                                        </Border.BorderBrush>
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                                        </Border.Background>
                                    </Border>
                                    <ScrollViewer Margin="4,6,4,6"
                                        SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                            KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="ToggleButton" Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor3}"/>
                            </Trigger>
                            <Trigger SourceName="ContentSite" Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor3}"/>
                            </Trigger>
                            <Trigger SourceName="PART_EditableTextBox" Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryColor3}"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsGrouping"
                                Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup"
                                Property="AllowsTransparency"
                                Value="true">
                                <Setter TargetName="DropDownBorder"
                                    Property="CornerRadius"
                                    Value="4" />
                                <Setter TargetName="DropDownBorder"
                                    Property="Margin"
                                    Value="0,2,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="10"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="47*"/>
                <ColumnDefinition Width="40*"/>
                <ColumnDefinition Width="48*"/>
                <ColumnDefinition Width="25*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="5" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="3" />
                    <RowDefinition Height="23" />
                    <RowDefinition Height="Auto" />

                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="23"/>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="8" />
                    <RowDefinition Height="Auto" />

                    <RowDefinition Height="5"/>
                    <RowDefinition Height="23"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="23"/>
                    <RowDefinition Height="Auto" />

                    <RowDefinition Height="23" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="23" />
                    <RowDefinition Height="Auto" />

                </Grid.RowDefinitions>
                <!-- unit info -->
                <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Height="Auto">
                    <TextBox x:Name="txtUnitName" FontSize="12"  MaxLength="30" Margin="10,6,5,5" Height="28" Width="196" Padding="5,0,0,0" VerticalAlignment="Center"
                           Text="{Binding Path=UnitName,Mode=TwoWay}"
                                IsReadOnly="{Binding IsHENameEditable}"
                                Foreground="{Binding UnitNameColor}" >
                    </TextBox>
                    <Button  Name="btnEdit" Background="Transparent" BorderThickness="0"  Margin="0,0,0,0">
                        <fa:ImageAwesome Icon="Edit" HorizontalAlignment="Left"   VerticalAlignment="Center"  Height="20" Width="20" />
                    </Button>
                </StackPanel>

                <!-- Room info -->
                <Label x:Name="lblRoom" Grid.Row="3" Grid.Column="0" Content="{ext1:LocalisedText Key=ROOM}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                <Grid Grid.Row="5" Grid.Column="0" Margin="0,0,10,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <ComboBox Margin="10,0,0,0" x:Name="cmbRoom" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" Height="30" Width="200" BorderThickness="1"
                  ItemsSource="{Binding Path=RoomName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                  DisplayMemberPath="Name" SelectedValuePath="Value"
                  SelectedItem="{Binding SelectedRoom, Mode=TwoWay ,UpdateSourceTrigger=PropertyChanged}"
                  >
                    </ComboBox>
                    <Button x:Name="btnAddRoom" Grid.Row="0" Background="#FFF5F4F4" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" Height="30"  Width="33" Style="{StaticResource styleButtonOnFloor}" Content="+" Margin="220,0,0,0" ToolTip="Add Room">
                        <!--<fa:ImageAwesome Icon="Plus" Foreground="Black" ToolTip="Add Room" VerticalAlignment="Center" HorizontalAlignment="Center" Width="10"/>-->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding AddEditRoomCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </Grid>

                <!-- floor info -->
                <Label x:Name="lblFloor" Content="{ext1:LocalisedText Key=FLOOR}" Grid.Row="6" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0"/>
                <Grid Grid.Row="7" Grid.Column="0" Margin="0,0,10,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <ComboBox x:Name="cmbFloor" Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" Height="30" Width="200" BorderThickness="1"
                  ItemsSource="{Binding Path=FloorList, UpdateSourceTrigger=PropertyChanged}" Margin="10,0,0,0"          
                  DisplayMemberPath="Name" SelectedValuePath="Value"                   
                  SelectedItem="{Binding SelectedFloor,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  />

                    <Button x:Name="btnAddFloor" Grid.Row="0" Background="#FFF5F4F4"  HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" Height="30"  Width="33" Style="{StaticResource styleButtonOnFloor}" Content="+" RenderTransformOrigin="-1.525,0.455" Margin="220,0,0,0" ToolTip="Add Floor">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding AddFloorCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </Grid>
                <!-- Capacity Requirements -->
                <TextBlock x:Name="txtblCapacityRequirements" Grid.Row="9" Grid.Column="0" TextWrapping="Wrap" Text="{ext1:LocalisedText Key=CAPACITY_REQUIREMENTS}" FontSize="14" FontWeight="Bold" FontFamily="Arial" HorizontalAlignment="Left" Margin="10,0,0,0"/>
                <!-- Fresh Air -->
                <Label x:Name="lblFreshAir" Content="{ext1:LocalisedText Key=FRESH_AIR}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Row="11" Grid.Column="0" Margin="10,0,0,0"/>
                <StackPanel Grid.Row="12" Grid.Column="0" Orientation="Horizontal">
                    <xc:DecimalUpDown x:Name="freshAir"  Increment="0.1"  HorizontalAlignment="Left" VerticalAlignment="Top" AllowSpin="True" AllowTextInput="True" AutoMoveFocus="True" Height="30" Width="92" BorderThickness="1"
                              Margin="10,0,0,0" Text="{Binding FreshAir, Mode=TwoWay}" TextAlignment="Right"/>
                  
                        <ComboBox x:Name="cmb_airflow" PreviewMouseLeftButtonDown="cmb_airflow_PreviewMouseLeftButtonDown"  HorizontalAlignment="Left" Margin="10,5,0,5" VerticalAlignment="Center" Width="50" Background="White" BorderBrush="Transparent" BorderThickness="0" HorizontalContentAlignment="Center"
                              ItemsSource="{Binding Path=AirFlowUnit}"  SelectedItem="{Binding Path=CurrentFreshAirUnit}"/>
                 
                    <Button x:Name="btn_airflow" Content="  ▼" Style="{StaticResource TransparentStyle}" Background="White" BorderBrush="White"  Foreground="Black"  BorderThickness="0" Cursor="Arrow" Click="btn_airflow_Click_1"  Margin="-6,5"  ClipToBounds="True" Height="Auto" Width="20"/>
                </StackPanel>

                <!-- Area -->
                <Label x:Name="lblArea" Content="{ext1:LocalisedText Key=AREA}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Grid.Row="13" Grid.Column="0" Margin="10,0,0,0"/>
                <StackPanel Grid.Row="14" Grid.Column="0" Orientation="Horizontal">
                    <xc:DecimalUpDown x:Name="areaVal" Minimum="0" DefaultValue="0" Increment="0.1" AllowSpin="True" AllowTextInput="True" AutoMoveFocus="True" HorizontalAlignment="Left" VerticalAlignment="Top" Width="92" Height="30" BorderThickness="1"
                               Margin="10,0,0,0" Text="{Binding Area, Mode=TwoWay }" TextAlignment="Right"/>
                    <ComboBox x:Name="cmb_area" HorizontalAlignment="Left" Margin="10,5,0,5" PreviewMouseLeftButtonDown="cmb_airflow_PreviewMouseLeftButtonDown" VerticalAlignment="Center" Width="51" Background="White" BorderBrush="White" BorderThickness="0" HorizontalContentAlignment="Center" ItemsSource="{Binding Path=AreaUnit}"
                              SelectedItem="{Binding Path=CurrentAreaUnit}"/>
                    <Button x:Name="btn_area" Style="{StaticResource TransparentStyle}"  Content="  ▼" Height="Auto" Background="White" BorderBrush="White" Foreground="Black" Cursor="Arrow" Click="btn_area_Click" Margin="-6,5"  ClipToBounds="True" Width="20"  />
                </StackPanel>

                <!-- ESP-->
                <Label x:Name="lblESP" Content="{ext1:LocalisedText Key=ESP}" Grid.Row="15" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="10,0,0,0"/>
                <StackPanel Grid.Row="16" Grid.Column="0" Orientation="Horizontal">
                    <xc:DecimalUpDown x:Name="espVal" Increment="0.1" AllowSpin="True" AllowTextInput="True" AutoMoveFocus="True" HorizontalAlignment="Left" VerticalAlignment="Top" Height="30" Width="92" BorderThickness="1"
                             Margin="10,0,0,0" Text="{Binding ESPVal, Mode=TwoWay}" TextAlignment="Right"/>
                    <ComboBox x:Name="cmb_esp" HorizontalAlignment="Left"  Margin="10,5,0,5" VerticalAlignment="Center" Width="53"  Background="White" BorderBrush="White" BorderThickness="0" HorizontalContentAlignment="Center" 
                              ItemsSource="{Binding Path=EspUnit}" SelectedItem="{Binding Path=CurrentESPUnit}" SelectedIndex="0"/>
                    <Button x:Name="btn_esp" Content="  ▼" Style="{StaticResource TransparentStyle}" Height="Auto" Background="White" BorderBrush="White"  Foreground="Black" Cursor="Arrow" Click="btn_esp_Click"  Margin="-6,5" ClipToBounds="True" Width="20" />
                </StackPanel>

                <!-- number of people -->
                <Label x:Name="labelNoOfPeople" Content="{ext1:LocalisedText Key=NO_OF_PEOPLE}" HorizontalAlignment="Left" Grid.Row="17" Grid.Column="0" VerticalAlignment="Bottom" Grid.ColumnSpan="2" Margin="10,0,0,0"/>
                <StackPanel Grid.Row="18" Grid.Column="0" Orientation="Horizontal">
                    <xc:SingleUpDown x:Name="noOfPpl" DefaultValue="0" Minimum="0" Grid.Row="1" Grid.Column="3" AllowSpin="True"  AllowTextInput="True" AutoMoveFocus="True"    HorizontalAlignment="Left" VerticalAlignment="Top"  Width="92" Height="30" BorderThickness="1" 
             Margin="10,0,0,0" Text="{Binding NoOfPeople, Mode=TwoWay}" TextAlignment="Right"/>
                </StackPanel>

            </Grid>

            <!-- column 2 -->
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="5" />
                    <RowDefinition Height="33" />
                    <RowDefinition Height="3" />
                    <RowDefinition Height="23" />
                    <RowDefinition Height="Auto" />

                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="23"/>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="23" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"/>

                    <RowDefinition Height="26"/>
                    <RowDefinition Height="Auto"/>


                </Grid.RowDefinitions>

                <!-- Series info -->
                <Label x:Name="lblSeries" Grid.Row="3" Grid.Column="1" Content="{ext1:LocalisedText Key=SERIES}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0"/>
                <ComboBox x:Name="cmbSeries" Grid.Row="5" Grid.Column="1" Height="33" Width="200" HorizontalAlignment="Left" BorderThickness="1"      
            ItemsSource="{Binding Path=ListSeries,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"                     
             Margin="20,0,0,0" DisplayMemberPath="DisplayName" SelectedValuePath="SelectedValues"
            SelectedItem="{Binding SelectedSeries, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
            />

                <!-- power info-->
                <Label x:Name="lblPower" Content="{ext1:LocalisedText Key=POWER}" Grid.Row="6" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="20,0,0,0"/>
                <ComboBox x:Name="cmbPower" Grid.Row="7" Grid.Column="1" Height="33" Width="200" HorizontalAlignment="Left" BorderThickness="1"     
          ItemsSource="{Binding Path=Power,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"        
          Margin="20,0,0,0" DisplayMemberPath="DisplayName" 
          SelectedItem="{Binding SelectedPower}"/>

                <!-- model info -->
                <Label x:Name="tblModel" Content="{ext1:LocalisedText Key=MODEL}" Grid.Row="8" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="20,0,0,0"/>
                <ComboBox x:Name="cmbModel" Grid.Row="9" Grid.Column="1" Height="33" Width="200" HorizontalAlignment="Left" BorderThickness="1"     
          ItemsSource="{Binding Path=ListModel,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"        
          Margin="20,0,0,0" SelectedValuePath="SelectedValues" IsHitTestVisible ="{Binding isListModelEditable}"
          SelectedItem="{Binding SelectedModel,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox x:Name="manualSel" Grid.Row="10" Grid.Column="1" Content="{ext1:LocalisedText Key=MANUAL}" Margin="20,0,0,0" IsChecked="{Binding Path=manualSelChecked }"/>

                <Label x:Name="lblFanSpeed" Grid.Row="11" Grid.Column="1" Content="{ext1:LocalisedText Key=FAN_SPEED}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="20,0,0,0"/>
                <ComboBox x:Name="cmbFanSpeed" Grid.Row="12"  ItemsSource="{Binding FanSpeeds}" SelectedItem="{Binding SFanSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="33" Width="100" HorizontalAlignment="Left" BorderThickness="1" Margin="20,0,0,0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding SelectionChangedSelectedFanSpeed}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </Grid>

            <!-- column 3-->
            <!-- Selected Heat exchanger info-->
            <Grid Grid.Column ="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="38"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="179*"/>
                    <RowDefinition Height="83*"/>
                </Grid.RowDefinitions>

                <Label x:Name="tblselHE" Content="{ext1:LocalisedText Key=SELECTED_HEAT_EXCHANGER}" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5,0,0,0" Height="26" Width="141"/>
                <Border Grid.Row="2" Margin="5"
                    BorderBrush="LightGray" BorderThickness="2,2,2,2" CornerRadius="3"
                    VerticalAlignment="Top">
                    <StackPanel Grid.Row="2" Orientation="Vertical">
                        <Image Width="255" Height="146" Source="{Binding HEImagePath, Mode=TwoWay, UpdateSourceTrigger=LostFocus}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        <StackPanel Height="Auto" Width="Auto" Background="#F7F7F7">
                            <Label x:Name="lblSpec" Content="{ext1:LocalisedText Key=SPECIFICATIONS}"  HorizontalAlignment="Left" VerticalAlignment="Top" Margin="8,0,0,0" Height="26" Width="141"  />
                        </StackPanel>
                        <StackPanel Height="Auto" Width="Auto" Orientation="Horizontal">
                            <Label x:Name="lblmodel" Content="{ext1:LocalisedText Key=MODEL}"  HorizontalAlignment="Left" VerticalAlignment="Top" Margin="8,0,0,0" Height="26" Width="108"  />
                            <Label x:Name="lblSelmodel" Content="{Binding SelHEModel }"  HorizontalAlignment="Left" VerticalAlignment="Top" Margin="12,0,0,0" Height="26" Width="Auto"  />
                        </StackPanel>
                        <StackPanel Height="Auto" Width="Auto" Orientation="Horizontal" Background="#F7F7F7">
                            <Label x:Name="lblAirflow" Content="{ext1:LocalisedText Key=AIR_FLOW}"  HorizontalAlignment="Left" VerticalAlignment="Top" Margin="8,0,0,0" Height="26" Width="108" />
                            <Label x:Name="lblSelAirflow" Content="{Binding SelHEAirflow }"  HorizontalAlignment="Left" VerticalAlignment="Top" Margin="12,0,0,0" Height="26" Width="100"  />
                        </StackPanel>
                        <StackPanel Height="Auto" Width="Auto" Orientation="Horizontal">
                            <TextBlock x:Name="lblEsp" Text="{ext1:LocalisedText Key=EXTERNAL_STATIC_PRESSURE}" Foreground="#DD000000" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,0,0,0" Height="Auto" Width="108" TextWrapping="Wrap"  />
                            <Label x:Name="lblSelEsp" Content="{Binding SelHEESP }"  HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,0,0,0" Height="26" Width="100"  />
                        </StackPanel>
                        <StackPanel Height="Auto" Width="Auto" Orientation="Horizontal" Background="#F7F7F7">
                            <TextBlock x:Name="lblTef" Text="{ext1:LocalisedText Key=TEMPERATURE_EXCHANGE_EFFICIENCY}" Foreground="#DD000000" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,0,0,0" Height="Auto" Width="108" TextWrapping="Wrap"  />
                            <Label x:Name="lblSelTef" Content="{Binding SelTEF}"  HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,0,0,0" Height="26" Width="100"  />
                        </StackPanel>
                        <StackPanel Height="Auto" Width="Auto" Orientation="Horizontal">
                            <TextBlock x:Name="lblEef" Text="{ext1:LocalisedText Key=ENTHALPY_EXCHANGE_EFFICIENCY}" Foreground="#DD000000" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,0,0,0" Height="Auto" Width="108" TextWrapping="Wrap"  />
                            <StackPanel Orientation="Vertical">
                                <TextBlock x:Name="lblcooling" Text="{ext1:LocalisedText Key=COOLING}" Foreground="#DD000000" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,0,0,0" TextWrapping="Wrap"  Width="60"/>
                                <TextBlock x:Name="lblSelcooling" Text="{Binding SelCooling}" Foreground="#DD000000" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,0,0,0" TextWrapping="Wrap"  Width="60"/>
                            </StackPanel>
                            <StackPanel Orientation="Vertical">
                                <TextBlock x:Name="lblHeating" Text="{ext1:LocalisedText Key=HEATING}" Foreground="#DD000000" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,0,0,0" TextWrapping="Wrap"  Width="60"/>
                                <TextBlock x:Name="lblSelHeating" Text="{Binding SelHeating}" Foreground="#DD000000" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,0,0,0" TextWrapping="Wrap"  Width="60"/>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </Border>

            </Grid>
            <!-- end of column with selected Heat exchanger -->

            <!-- Buttons for additional functionality -->
            <StackPanel Orientation="Vertical" Grid.Column="3">
                <Button Name="btnAccessories" FontSize="10" Background="{StaticResource OtherColor5}" Width="125" Height="25" Margin="3,70,3,0" HorizontalAlignment="Stretch" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding AddAccessoryCommandHE}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <StackPanel Orientation="Horizontal" Width="98">
                        <Image  Source="/Image/TypeImages/Accesories_Image.png" Height="17" Width="20" Visibility="Visible" HorizontalAlignment="Left"/>
                        <TextBlock Text="{ext1:LocalisedText Key=ADD_ACCESSORIES}" HorizontalAlignment="Right" VerticalAlignment="Center" Width="84"/>
                    </StackPanel>
                </Button>
                <Button  Name="btnSalesData" FontSize="10" Background="{StaticResource OtherColor5}"  Margin="3,10,3,0"  Width="125" Height="25">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding AddSalesDataCommandHe}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                        <Image Source="/Image/TypeImages/Sales_Data.png" Height="17" Width="20" Margin="-20,0,5,0" />
                        <TextBlock Text="{ext1:LocalisedText Key=SALES_DATA}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
                <Button Name="btnInstallationGuide"  FontSize="9" Background="{StaticResource OtherColor5}" Width="125" Height="25" Margin="3,10,3,0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding ShowInstallationGuide}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                        <Image Source="/Image/TypeImages/Installation_Guide.png" Height="17" Width="20"  HorizontalAlignment="Left"/>
                        <TextBlock Text="{ext1:LocalisedText Key=INSTALLATION_GUIDE}"  HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </StackPanel>
                </Button>
                <Button Name="btnGaDrawing" FontSize="9"  Background="{StaticResource OtherColor5}" Width="125" Height="25" Margin="3,10,3,0" HorizontalAlignment="Stretch" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding ShowGADrawingPDF}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Image/TypeImages/GA_Drawing.png" Height="17" Width="20" HorizontalAlignment="Left" Margin="-5,0,5,0" />
                        <TextBlock Text="{ext1:LocalisedText Key=GA_DRAWINGS}" HorizontalAlignment="Right" VerticalAlignment="Center" Width="67"/>
                    </StackPanel>
                </Button>
                <Button Name="btnFanPerformance" FontSize="9"  Background="{StaticResource OtherColor5}" Width="125" Height="25" Margin="3,10,3,0" HorizontalAlignment="Stretch">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <i:InvokeCommandAction Command="{Binding ShowFanPerformance}"></i:InvokeCommandAction>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Image/TypeImages/Sales_Data.png" Height="17" Width="20" HorizontalAlignment="Left" Margin="-5,0,5,0" />
                        <TextBlock Text="{ext1:LocalisedText Key=FSN_PERFORMANCE}" HorizontalAlignment="Right" VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>

            </StackPanel>

        </Grid>

        <!-- Outdoor Design Condition -->
        <Grid Grid.Row="1" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Label x:Name="lblOutdoorDesignConditions" Content="{ext1:LocalisedText Key=OUTDOOR_DESIGN_CONDITION}" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.ColumnSpan="2" Margin="5,10,0,0" FontSize="14" FontWeight="Bold" FontFamily="Arial" Height="28"/>

            <!-- change temperature units -->
            <Button Name="btnChangeTempU" Grid.Row="0" Style="{DynamicResource HyperLinkButtonStyle}" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14" Margin="203,10,605,10" Width="92" >
                <TextBlock Text="{Binding DisplayCurrentTempUnit, StringFormat='Change To {0}'}"/>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <i:InvokeCommandAction Command="{Binding ChangeTempCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>

            <Grid Grid.Row="0" HorizontalAlignment="Center">
                <md:Snackbar DockPanel.Dock="Top" IsActive="{Binding IsError}" Height="45" Width="Auto" Background="LightPink" BorderBrush="HotPink" Margin="350,0,-91,0">
                    <md:SnackbarMessage  Foreground="Black" >
                        <md:SnackbarMessage.Content>
                            <StackPanel Orientation="Horizontal">
                                <jchctrl:JCHIcon AwesomeIcon="ExclamationCircle" Width="20" Height="20"/>
                                <TextBlock  Margin="5,0,0,0"  Text="{Binding DCErrorMessage}"></TextBlock>
                            </StackPanel>
                        </md:SnackbarMessage.Content>
                    </md:SnackbarMessage>
                </md:Snackbar>
            </Grid>

            <!-- cooling -->
            <StackPanel Orientation="Horizontal" Margin="0,0,0,0"  Grid.Row="2">
                <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                    <TextBlock FontWeight="Bold" FontSize="12" VerticalAlignment="Center" Foreground="#333333" HorizontalAlignment="Left" Text="{ext1:LocalisedText Key=COOLING}" Margin="10,0,0,0"/>
                </StackPanel>
                <StackPanel Orientation="Vertical" Margin="30,0,0,10">
                    <TextBlock  FontSize="12" VerticalAlignment="Center" Foreground="#DD000000" HorizontalAlignment="Left"  Text="{ext1:LocalisedText Key=DRY_BULB}" />
                    <xc:DecimalUpDown Name="NumericOutdoorDB"  AllowSpin="True" DisplayDefaultValueOnEmptyText="True" DefaultValue="0"  IsEnabled="{Binding Path=IsCheck,Mode=TwoWay}"   AllowTextInput="True" HorizontalAlignment="Left" AutoMoveFocus="True"  Width="90" Height="30"  Value="{Binding Path=outdoorCoolingDB}" FormatString="N1">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding NumericOutdoorCDBCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </xc:DecimalUpDown>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                    <TextBlock Text="{Binding Path=CurrentTempUnit}" TextAlignment="Left" Foreground="#DD000000"  Name="lblNumericOutDB" 
                                   HorizontalAlignment="Right" Height="16" Width="12" ></TextBlock>
                    <Label x:Name="lblOutdoorDb"  Content="{Binding lbloutdoorCoolingDB}" FontSize="10" Foreground="Red" VerticalAlignment="Center" Margin="10,15,0,0" />
                </StackPanel>
            </StackPanel>

            <!-- Heating -->
            <StackPanel Orientation="Horizontal" Margin="0,0,0,0" Grid.Row="1" Height="63">
                <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                    <TextBlock FontWeight="Bold" Foreground="#333333" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Left" Text="{ext1:LocalisedText Key=HEATING}" Margin="10,0,0,0"/>
                </StackPanel>
                <!-- Heating dry bulb -->
                <StackPanel Orientation="Vertical" Margin="30,0,0,0">
                    <TextBlock FontSize="12" VerticalAlignment="Center" Margin="0" Foreground="#DD000000" HorizontalAlignment="Left" Text="{ext1:LocalisedText Key=DRY_BULB}"/>
                    <xc:DecimalUpDown Name="NumeroutdoorHDDBT" FormatString="N1" DisplayDefaultValueOnEmptyText="True" DefaultValue="0"  IsEnabled="{Binding Path=IsCheck,Mode=TwoWay}"  AllowSpin="True" AllowTextInput="True" AutoMoveFocus="True"  HorizontalAlignment="Left"  Width="90" Height="30" Value="{Binding  Path=outdoorHeatingDB}" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding NumericOutdoorHDBCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </xc:DecimalUpDown>
                    <Label Name="lblOutdoorHDDBT"  Content="{Binding lbloutdoorHeatingDB}" FontSize="10" Foreground="Red" />
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                    <TextBlock Text="{Binding Path=CurrentTempUnit}" Foreground="#DD000000" TextAlignment="Left"  Name="lblNumeroutdoorHDDBT" 
                                  Height="16" Width="12"></TextBlock>
                </StackPanel>

                <!-- Heating Wet bulb -->
                <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                    <StackPanel Orientation="Vertical" Margin="0,0,0,0">
                        <TextBlock FontSize="12" VerticalAlignment="Center" Foreground="#DD000000" HorizontalAlignment="Left" Text="{ext1:LocalisedText Key=WET_BULB}" />
                        <xc:DecimalUpDown Name="NumeroutdoorHDWBT" FormatString="N1" DisplayDefaultValueOnEmptyText="True" DefaultValue="0" IsEnabled="{Binding Path=IsCheck,Mode=TwoWay}"  AllowSpin="True" AllowTextInput="True" AutoMoveFocus="True" Grid.Column="1"    HorizontalAlignment="Left" Width="90" Height="30"  Value="{Binding Path=outdoorHeatingWB}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction Command="{Binding NumericOutdoorHDWBTCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </xc:DecimalUpDown>
                        <Label Name="lbloutdoorHeatingWB"  Content="{Binding lbloutdoorHeatingWB }" FontSize="10" Foreground="Red"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                        <TextBlock Text="{Binding Path=CurrentTempUnit}" Foreground="#DD000000" TextAlignment="Left"    Name="lblNumeroutdoorHDWBT" 
                                   VerticalAlignment="Center" HorizontalAlignment="Right" Height="16" Width="12"></TextBlock>
                    </StackPanel>
                </StackPanel>

                <!-- Heating relative Humidity -->
                <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                    <StackPanel Orientation="Vertical" Margin="0,0,0,0">
                        <TextBlock  FontSize="12" VerticalAlignment="Center" Foreground="#DD000000" HorizontalAlignment="Left" Text="{ext1:LocalisedText Key=RELATIVE_HUMIDITY}" Margin="10,0,0,0"/>
                        <xc:DecimalUpDown Name="NumeroutdoorHDRH" FormatString="N1" BorderBrush="Gray" DisplayDefaultValueOnEmptyText="True" DefaultValue="0"   IsEnabled="{Binding Path=IsCheck,Mode=TwoWay}" AllowSpin="True" 
                                      Margin="10,0,0,0" HorizontalAlignment="Left" AllowTextInput="True" AutoMoveFocus="True"    Width="92" Height="30" Value="{Binding Path=outdoorHeatingRH}"  >
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction Command="{Binding NumeroutdoorHDRHCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </xc:DecimalUpDown>
                        <Label Name="lblOutdoorHDRH"  Content ="{Binding Path=lbloutdoorHeatingRH}" FontSize="10" Foreground="Red"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,0">
                        <TextBlock Text="%" TextAlignment="Left" Foreground="#DD000000" Name="lblNumeroutdoorHDRH" 
                                   VerticalAlignment="Center" HorizontalAlignment="Right" Height="16"></TextBlock>
                    </StackPanel>
                </StackPanel>
            </StackPanel>

        </Grid>
        <!-- Outdoor Design Condition -->

    </Grid>
</UserControl>