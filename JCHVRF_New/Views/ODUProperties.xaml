<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:JCHVRF_New.Views" 
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:jchctrl="clr-namespace:JCHVRF_New.Common.Controls"
             xmlns:ext="clr-namespace:JCHVRF_New.Common.UI.Extensions"
             xmlns:xcad="http://schemas.xceed.com/wpf/xaml/toolkit"
             ext:JCHDockerService.Title ="{ext1:LocalisedText Key=PROPERTIES}"   
             xmlns:conv="clr-namespace:JCHVRF_New.Common.UI.Converters"
             xmlns:ext1="clr-namespace:JCHVRF_New.LanguageData"
             xmlns:conv1="clr-namespace:JCHVRF_New.Model"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:Themes1="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit" x:Class="JCHVRF_New.Views.ODUProperties"
             mc:Ignorable="d"
             d:DesignHeight="500" d:DesignWidth="180" MinWidth="180">
    <UserControl.Resources>
        <conv1:LanguageNameConverter x:Key="LangNameConverter" />
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderThickness="1" BorderBrush="{StaticResource OtherColor6}" Background="{StaticResource OtherColor6}" SnapsToDevicePixels="True">
                            <DockPanel LastChildFill="True">
                                <ToggleButton IsChecked="False" x:Name="ToggleEdit" DockPanel.Dock="Right" Cursor="Hand" IsHitTestVisible="True">
                                    <ToggleButton.Template>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <jchctrl:JCHIcon Foreground="{StaticResource OtherColor2}" AwesomeIcon="PencilSquare"/>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                </ToggleButton>
                                <ScrollViewer Visibility="Collapsed" VerticalContentAlignment="Center" IsEnabled="False" x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                                <TextBlock VerticalAlignment="Center" x:Name="Part_Label" FontSize="{TemplateBinding FontSize}" Text="{TemplateBinding Text}"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsChecked, ElementName=ToggleEdit}" Value="True">
                                <Setter TargetName="border" Property="Background" Value="White"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource OtherColor2}"/>
                                <Setter TargetName="PART_ContentHost" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Part_Label" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Background" Value="{StaticResource OtherColor6}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Grid>
                                <Border x:Name="NotificationBorder" Width="18" VerticalAlignment="Top" HorizontalAlignment="Right" CornerRadius="5" Background="{StaticResource OtherColor2}">
                                    <TextBlock HorizontalAlignment="Center" FontSize="9" Foreground="White" Margin="2,0,2,0" Text="{Binding (ext:JCHUIService.NotificationCount), RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Border>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}" TextWrapping="Wrap"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ext:JCHUIService.NotificationCount" Value="0">
                                <Setter  Property="Visibility" TargetName="NotificationBorder" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="Foreground" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Margin" Value="2"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
            <StackPanel Orientation="Vertical">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=ActualWidth, Converter={conv:DoubleGreaterThanParameterConverter}, ConverterParameter=300}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                <Expander Header="{ext1:LocalisedText Key=MODEL_SPECIFICATIONS}">
                    <StackPanel Orientation="Vertical" Margin="10">
                        <UniformGrid Rows="3" Columns="3">
                            <TextBlock Text="{ext1:LocalisedText Key=CAPACITY}" FontWeight="Bold"/>
                            <TextBlock Text="{ext1:LocalisedText Key=RATED}" FontWeight="Bold"/>
                            <TextBlock Text="{ext1:LocalisedText Key=CORRECTED}" FontWeight="Bold"/>

                            <TextBlock Text="{ext1:LocalisedText Key=COOLING}" />
                            <StackPanel  Orientation="Horizontal" >
                                <TextBlock Text="{Binding CoolingRated, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock  Margin="0"  Text="{Binding CapacityMasureUnit}" />
                            </StackPanel>
                            <StackPanel  Orientation="Horizontal" >
                                <TextBlock Text="{Binding CoolingCorrected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock  Margin="0"  Text="{Binding CapacityMasureUnit}" />
                            </StackPanel>
                            <TextBlock Text="{ext1:LocalisedText Key=HEATING}" />
                            <StackPanel  Orientation="Horizontal" >
                                <TextBlock Text="{Binding HeatingRated, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock  Text="{Binding CapacityMasureUnit}" />
                            </StackPanel>
                            <StackPanel  Orientation="Horizontal" >
                                <TextBlock Text="{Binding HeatingCorrected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock  Text="{Binding CapacityMasureUnit}" />
                            </StackPanel>
                        </UniformGrid>
                        <WrapPanel Margin="0,10,0,0">
                            <TextBlock Width="170" Text="{ext1:LocalisedText Key=ELECTRICAL_SPECIFICATION}" />
                            <TextBlock FontWeight="Bold" Text="{Binding ElectricalSpecification, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </WrapPanel>
                        <WrapPanel>
                            <TextBlock Width="170" Text="{ext1:LocalisedText Key=MAXIDULIMIT}" TextWrapping="Wrap"/>
                            <StackPanel  Orientation="Horizontal" >
                                <TextBlock FontWeight="Bold" Text="{Binding MaxNumberIDUconnections, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <!--<TextBlock  Margin="5"  Text="{Binding CapacityMasureUnit}" /> Fix for bug 4476-->
                            </StackPanel>
                        </WrapPanel>
                        <WrapPanel>
                            <TextBlock Width="170" Text="{ext1:LocalisedText Key=ACTUAL_RATIO}" />
                            <TextBlock FontWeight="Bold" Text="{Binding ActualRatio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </WrapPanel>

                    </StackPanel>
                </Expander>
                <TextBox Text="{Binding OutdoorName}"/>
                <UniformGrid Rows="2" Columns="2">
                    <Button Content="{ext1:LocalisedText Key=INSTALLATION_GUIDE}" IsEnabled="False"/>
                    <Button Content="{ext1:LocalisedText Key=SALES_DATA}" IsEnabled="False"/>
                    <Button Content="{ext1:LocalisedText Key=GA_DRAWINGS}" IsEnabled="False"/>
                    <Button Content="{ext1:LocalisedText Key=ACCESSORIES}" ext:JCHUIService.NotificationCount="4" />
                </UniformGrid>
                <Expander Header="{ext1:LocalisedText Key=UNIT_DETAILS}" IsExpanded="True">
                    <StackPanel Orientation="Vertical" Margin="10">
                        <Border Background="{StaticResource OtherColor6}" Margin="0,5,0,5" Padding="2">
                            <jchctrl:JCHIcon Type="Image" ImagePath="{Binding OduImagePath}"/>
                        </Border>
                        <TextBlock Text="{ext1:LocalisedText Key=ODU_SERIES}"/>
                        <ComboBox  DisplayMemberPath="DisplayName" SelectedValuePath="Value" SelectedValue="{Binding SelectedProductSeries, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  ItemsSource="{Binding ListOfSeries, Mode=TwoWay}" >
                            <!--<i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding SelectionChangedSelectedODUSeries}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>-->
                        </ComboBox>
                        <TextBlock Margin="0,10,0,0" Text="{ext1:LocalisedText Key=Max_Ratio}"/>
                        <ComboBox  DisplayMemberPath="DisplayName" SelectedValuePath="Value" SelectedValue="{Binding SelectedMaxRatio, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  ItemsSource="{Binding ListMaxRatio, Mode=TwoWay}"/>

                        <CheckBox Content="{ext1:LocalisedText Key=MANUAL_SELECTION}" IsChecked="{Binding EnableManualSelection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,10,0,0">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked">
                                    <i:InvokeCommandAction Command="{Binding ManualSelectionCheckedCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Unchecked">
                                    <i:InvokeCommandAction Command="{Binding ManualSelectionUnCheckedCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </CheckBox>

                        <TextBlock Margin="0,10,0,0" Text="{ext1:LocalisedText Key=MODEL}"/>
                        <ComboBox DisplayMemberPath="DisplayName" SelectedValuePath="SelectedValues" IsEnabled="{Binding EnableManualselectionOduModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding SelectedModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"   ItemsSource="{Binding ListOduModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    </StackPanel>
                </Expander>
                <Expander Header="{ext1:LocalisedText Key=DESIGN_CONDITIONS}">
                    <StackPanel Orientation="Vertical">
                        <WrapPanel Margin="10">
                            <TextBlock Cursor="Hand" Foreground="{StaticResource PrimaryColor3}" Text="{Binding DisplayCurrentTempUnit, StringFormat=Change To {0}}">
                            <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseUp">
                                <i:InvokeCommandAction Command="{Binding ChangeTempCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                            </TextBlock>
                        </WrapPanel>

                        <Expander>
                            <Expander.Header>
                                <StackPanel Orientation="Horizontal">
                                    <jchctrl:JCHIcon Margin="0,5" Foreground="{StaticResource OtherColor2}" AwesomeIcon="SnowflakeOutline"/>
                                    <TextBlock Text="{ext1:LocalisedText Key=COOLING}" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Expander.Header>
                            <WrapPanel Margin="10">
                                <DockPanel LastChildFill="True">
                                    <TextBlock Text="{ext1:LocalisedText Key=DRY_BULB}" DockPanel.Dock="Top"/>
                                    <xcad:DecimalUpDown  DockPanel.Dock="Left" DefaultValue="0"  Value="{Binding CoolingDryBulb, ConverterParameter=Temperature, Converter={StaticResource ValueToControlConverter}}" FormatString="N1">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="LostFocus">
                                                <i:InvokeCommandAction Command="{Binding LostFocusCoolingDryBulbCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </xcad:DecimalUpDown>
                                    <!--<Label Name="lblOutdoorDb"  Content="{Binding lblOutdoorCoolingDB }" />-->
                                    <Label x:Name="lblOutdoorDb" Width="auto" Height="15" Padding="1" FontSize="10" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{Binding lblOutdoorCoolingDB}"/>

                                </DockPanel>
                            </WrapPanel>
                        </Expander>
                        <Expander>

                            <Expander.Header>
                                <StackPanel Orientation="Horizontal">
                                    <jchctrl:JCHIcon Margin="0,5" Foreground="{StaticResource OtherColor2}" AwesomeIcon="SunOutline" />
                                    <TextBlock Text="{ext1:LocalisedText Key=HEATING}" VerticalAlignment="Center"/>
                                </StackPanel>
                            </Expander.Header>
                            <WrapPanel>
                                <DockPanel LastChildFill="True" >
                                    <TextBlock Text="{ext1:LocalisedText Key=DRY_BULB}" DockPanel.Dock="Top"/>
                                    <StackPanel Orientation="Vertical">
                                        <StackPanel Orientation="Horizontal">
                                            <xcad:DecimalUpDown DockPanel.Dock="Left" DefaultValue="0" Value="{Binding HeatingDryBulb, ConverterParameter=Temperature, Converter={StaticResource ValueToControlConverter}}" FormatString="N1">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding NumericHeatDryBulbCommand}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </xcad:DecimalUpDown>
                                            <TextBlock  Text="{Binding TemperatureTypeICDB}"    HorizontalAlignment="Right"  VerticalAlignment="Center" x:Name="lblCoolDryBulb" 
                                   TextAlignment="Justify"/>
                                        </StackPanel>
                                        <Label x:Name="lblOutdoorheatingDB" Width="auto" Height="15" Padding="1" FontSize="10" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{Binding lblOutdoorheatingDB}"/>
                                    </StackPanel>
                                </DockPanel>
                                <DockPanel LastChildFill="True">
                                    <TextBlock Text="{ext1:LocalisedText Key=WET_BULB}" DockPanel.Dock="Top"/>
                                    <StackPanel Orientation="Vertical">
                                        <StackPanel Orientation="Horizontal">
                                            <xcad:DecimalUpDown DockPanel.Dock="Left" DefaultValue="0" Value="{Binding HeatingWetBulb, ConverterParameter=Temperature, Converter={StaticResource ValueToControlConverter}}" FormatString="N1">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="LostFocus">
                                                        <i:InvokeCommandAction Command="{Binding NumericHeatWetBulbCommand}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </xcad:DecimalUpDown>
                                            <TextBlock Text="{Binding TemperatureTypeICWB}"   TextAlignment="Left"  x:Name="lblCoolWetBulb" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                        </StackPanel>
                                        <Label x:Name="lblOutDoorHeatingWB" Width="auto" Height="15" Padding="1" FontSize="10" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{Binding lblOutDoorHeatingWB}"/>
                                    </StackPanel>
                                </DockPanel>
                                <DockPanel LastChildFill="True">
                                    <TextBlock Text="{ext1:LocalisedText Key=RELATIVE_HUMIDITY}" DockPanel.Dock="Top"/>
                                    <xcad:DecimalUpDown IsEnabled="False" DockPanel.Dock="Left" DefaultValue="0" Value="{Binding HeatingRelativeHumidity, ConverterParameter=Temperature, Converter={StaticResource ValueToControlConverter}}" FormatString="N1">
                                        <!--<i:Interaction.Triggers>
                                            <i:EventTrigger EventName="LostFocus">
                                                <i:InvokeCommandAction Command="{Binding NumericInternalRHCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>-->
                                    </xcad:DecimalUpDown>
                                    <TextBlock Grid.Column="2" Grid.Row="9" Margin="0,0,0,0" Text="%" TextAlignment="Left"    x:Name="lblInternalRH" 
                                   VerticalAlignment="Center" HorizontalAlignment="Center" Height="16"/>
                                </DockPanel>
                            </WrapPanel>
                        </Expander>
                    </StackPanel>
                </Expander>
            </StackPanel>
        </ScrollViewer>
        <Grid MinWidth="560" MinHeight="400">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Path=ActualWidth, Converter={conv:DoubleGreaterThanParameterConverter}, ConverterParameter=300}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6*"/>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Vertical">
                    <TextBox Height="35" Text="{Binding Path=OutdoorName}"/>
                    <TextBlock Text="{ext1:LocalisedText Key=ODU_SERIES}"/>
                    <ComboBox Height="35"  DisplayMemberPath="DisplayName" SelectedValuePath="Value" SelectedValue="{Binding SelectedProductSeries, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Path=ListOfSeries,Mode=TwoWay}">
                        <!--Bug 4475 - replaced this with SelectedProductSeries SelectedValue="{Binding SelectedSeries, Mode=TwoWay  ,UpdateSourceTrigger=PropertyChanged}"-->
                    </ComboBox>
                    <TextBlock Margin="0,10,0,0" Text="{ext1:LocalisedText Key=Max_Ratio}"/>
                    <StackPanel Orientation="Horizontal">
                        <ComboBox Height="35" Width="90" DisplayMemberPath="DisplayName" SelectedValuePath="Value" SelectedValue="{Binding SelectedMaxRatio, Mode=TwoWay  ,UpdateSourceTrigger=PropertyChanged}"  ItemsSource="{Binding ListMaxRatio,Mode=TwoWay}">
                        </ComboBox>

                        <CheckBox Height="40" Margin="0,10,0,0" Content="{ext1:LocalisedText Key=MANUAL_SELECTION}" IsChecked="{Binding EnableManualSelection,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Checked">
                                    <i:InvokeCommandAction Command="{Binding ManualSelectionCheckedCommand}"/>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Unchecked">
                                    <i:InvokeCommandAction Command="{Binding ManualSelectionUnCheckedCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </CheckBox>
                    </StackPanel>

                    <TextBlock Margin="0,10,0,0" Text="{ext1:LocalisedText Key=MODEL}"/>
                    <ComboBox Height="35" DisplayMemberPath="DisplayName" SelectedValuePath="SelectedValues" IsEnabled="{Binding EnableManualselectionOduModel,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding SelectedModel, Mode=TwoWay ,UpdateSourceTrigger=PropertyChanged}"   ItemsSource="{Binding ListOduModel,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    </ComboBox>
                </StackPanel>
                <Border Grid.Column="1" Background="{StaticResource OtherColor6}" Margin="10,5,10,25" Padding="2">
                    <jchctrl:JCHIcon Type="Image" ImagePath="{Binding Path=OduImagePath}"/>
                </Border>
                <UniformGrid Grid.Column="2" Columns="1" Rows="4" Margin="5,5,5,25">
                    <Button Content="{ext1:LocalisedText Key=INSTALLATION_GUIDE}" IsEnabled="False"/>
                    <Button Content="{ext1:LocalisedText Key=SALES_DATA}" IsEnabled="False"/>
                    <Button Content="{ext1:LocalisedText Key=GA_DRAWINGS}" IsEnabled="False"/>
                    <Button Content="{ext1:LocalisedText Key=ACCESSORIES}" ext:JCHUIService.NotificationCount="4" IsEnabled="False"/>
                </UniformGrid>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6*"/>
                    <ColumnDefinition Width="7*"/>
                </Grid.ColumnDefinitions>
                <DockPanel LastChildFill="True" Margin="10" Background="{StaticResource OtherColor4}">
                    <TextBlock Text="{ext1:LocalisedText Key=MODEL_SPECIFICATIONS}" Margin="0,5,0,20" DockPanel.Dock="Top" FontWeight="Bold"/>

                    <UniformGrid Rows="3" Columns="3" DockPanel.Dock="Top">
                        <TextBlock Text="{ext1:LocalisedText Key=CAPACITY}" FontWeight="Bold"/>
                        <TextBlock Text="{ext1:LocalisedText Key=RATED}" FontWeight="Bold"/>
                        <TextBlock Text="{ext1:LocalisedText Key=CORRECTED}" FontWeight="Bold"/>

                        <TextBlock Text="{ext1:LocalisedText Key=COOLING}" />
                        <StackPanel  Orientation="Horizontal" >
                            <TextBlock Text="{Binding Path=CoolingRated,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock Text="{Binding CapacityMasureUnit}" ></TextBlock>
                        </StackPanel>
                        <StackPanel  Orientation="Horizontal" >
                            <TextBlock Text="{Binding Path=CoolingCorrected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock  Text="{Binding CapacityMasureUnit}" ></TextBlock>
                        </StackPanel>
                        <TextBlock Text="{ext1:LocalisedText Key=HEATING}"/>
                        <!--added fix for bug 4476 Heating Capacity needs to be shown-->
                        <StackPanel  Orientation="Horizontal" >
                            <TextBlock Text="{Binding Path=HeatingRated,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock  Text="{Binding CapacityMasureUnit}" ></TextBlock>
                        </StackPanel>
                        <!--added fix for bug 4476 -->
                        <StackPanel  Orientation="Horizontal" >
                            <TextBlock Text="{Binding Path=HeatingCorrected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock  Text="{Binding CapacityMasureUnit}" ></TextBlock>
                        </StackPanel>
                        <!--added fix for bug 4476 -->
                        <!--<TextBlock Text="" />-->
                    </UniformGrid>
                    <WrapPanel Margin="0,10,0,0" DockPanel.Dock="Top">
                        <StackPanel  Orientation="Horizontal" >
                            <TextBlock Width="170" Text="{ext1:LocalisedText Key=ELECTRICAL_SPECIFICATION}" />
                            <TextBlock Text="{Binding Path=ElectricalSpecification,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  />
                        </StackPanel>
                    </WrapPanel>
                    <WrapPanel DockPanel.Dock="Top">
                        <TextBlock Width="170" Text="{ext1:LocalisedText Key=MAXIDULIMIT}" TextWrapping="Wrap"/>
                        <StackPanel  Orientation="Horizontal" >
                            <TextBlock Text="{Binding Path=MaxNumberIDUconnections,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                            <!--<TextBlock  Text="{Binding CapacityMasureUnit}" ></TextBlock>-->
                            <!--commented as fix for bug 4476 -->
                        </StackPanel>
                    </WrapPanel>
                    <WrapPanel>
                        <TextBlock Width="170" Text="{ext1:LocalisedText Key=ACTUAL_RATIO}" />
                        <TextBlock Text="{Binding Path=ActualRatio,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                    </WrapPanel>
                </DockPanel>
                <DockPanel Grid.Column="1" LastChildFill="True" Margin="0,10,10,10" Background="{StaticResource OtherColor4}">
                    <WrapPanel DockPanel.Dock="Top">
                        <!--<TextBlock FontWeight="Bold" Text="Design Conditions" Margin="5,5,15,0"/>-->
                        <!--<Expander Header="Design Conditions">
                            
                        </Expander>-->
                        <TextBlock Text="{ext1:LocalisedText Key=DESIGN_CONDITIONS}" Margin="0,5,0,20" DockPanel.Dock="Top" FontWeight="Bold"/>
                        <!--<WrapPanel Margin="10">-->
                        <TextBlock Cursor="Hand" Foreground="{StaticResource PrimaryColor3}" Margin="10,3,0,0">
                            <TextBlock >
                            <Run Text="{ext1:LocalisedText Key=CHANGE_TO}"></Run>
                            <Run Text="{Binding DisplayCurrentTempUnit}"></Run>
                            </TextBlock>
                            <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseUp">
                                <i:InvokeCommandAction Command="{Binding ChangeTempCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        </TextBlock>
                        <!--</WrapPanel>-->
                    </WrapPanel>
                    <WrapPanel DockPanel.Dock="Top">
                        <TextBlock FontWeight="Bold" Text="{ext1:LocalisedText Key=COOLING}" Margin="5,30,15,0"/>
                        <DockPanel LastChildFill="True">
                            <TextBlock Text="{ext1:LocalisedText Key=DRY_BULB}" DockPanel.Dock="Top"/>
                            <xcad:DecimalUpDown DockPanel.Dock="Left" DefaultValue="0"  Value="{Binding Path=CoolingDryBulb, Converter={StaticResource ValueToControlConverter}, ConverterParameter=Temperature}" FormatString="N1"/>
                            <TextBlock  Text="{Binding Path=TemperatureTypeICDB}" HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Justify"/>
                        </DockPanel>
                    </WrapPanel>
                    <WrapPanel >
                        <TextBlock FontWeight="Bold" Text="{ext1:LocalisedText Key=HEATING}" Margin="5,30,15,0"/>

                        <StackPanel Orientation="Vertical" >

                            <TextBlock Text="{ext1:LocalisedText Key=DRY_BULB}" />
                                <StackPanel Orientation="Horizontal">
                                    <xcad:DecimalUpDown  DefaultValue="0" Value="{Binding Path=HeatingDryBulb,Converter={StaticResource ValueToControlConverter},ConverterParameter=Temperature}" FormatString="N1">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="LostFocus">
                                                <i:InvokeCommandAction Command="{Binding NumericHeatDryBulbCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </xcad:DecimalUpDown>
                                    <!--<xcad:DecimalUpDown DockPanel.Dock="Left" DefaultValue="0"/>-->
                                    <TextBlock  Text="{Binding Path=TemperatureTypeICDB}" HorizontalAlignment="Left" VerticalAlignment="Center" x:Name="lblCoolDryBulbpop" 
                                   TextAlignment="Justify"/>
                                </StackPanel>
                                <Label Name="lblValHeatingDryBulbpop" Width="auto" Height="15" Padding="1" FontSize="10" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{Binding lblOutdoorheatingDB}"/>
                            
                        </StackPanel>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="{ext1:LocalisedText Key=WET_BULB}"/>
                            <StackPanel Orientation="Horizontal"  Margin="10,0,0,0">
                                <xcad:DecimalUpDown DefaultValue="0" Value="{Binding Path=HeatingWetBulb,Converter={StaticResource ValueToControlConverter},ConverterParameter=Temperature}" FormatString="N1">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="LostFocus">
                                            <i:InvokeCommandAction Command="{Binding NumericHeatWetBulbCommand}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </xcad:DecimalUpDown>
                                <TextBlock Text="{Binding Path=TemperatureTypeICWB}"   TextAlignment="Left" Name="lblCoolWetBulbl" VerticalAlignment="Center" HorizontalAlignment="Left"></TextBlock>
                            </StackPanel>
                            <Label Name="lblValHeatWetBulb" Width="auto" Height="15" Padding="1" FontSize="10" Foreground="Red" HorizontalAlignment="Left" VerticalAlignment="Top" Content="{Binding Path=lblOutDoorHeatingWB}"/>

                        </StackPanel>
                        <StackPanel Orientation="Vertical" >
                            <TextBlock Text="{ext1:LocalisedText Key=RELATIVE_HUMIDITY}" />
                            <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                            <xcad:DecimalUpDown IsEnabled="False" DefaultValue="0" Value="{Binding Path=HeatingRelativeHumidity}" FormatString="N1">
                                <!--<i:Interaction.Triggers>
                                    <i:EventTrigger EventName="LostFocus">
                                        <i:InvokeCommandAction Command="{Binding NumericInternalRHCommand}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>-->
                            </xcad:DecimalUpDown>
                            <!--<Label Name="lblRelativeHumidity" Width="auto" Height="15" Padding="1" VerticalAlignment="Top"  FontSize="10" Content="{Binding Path=lblOutdoorHeatingRH}"  HorizontalAlignment="Left"/>-->
                            <TextBlock Grid.Column="2" Grid.Row="9" Margin="0,0,0,0" Text="%" TextAlignment="Left" Name="lblInternalRHpop" VerticalAlignment="Center" HorizontalAlignment="Left" Height="16"></TextBlock>
                            </StackPanel>
                        </StackPanel>
                    </WrapPanel>
                </DockPanel>
            </Grid>
        </Grid>
    </Grid>
</UserControl>